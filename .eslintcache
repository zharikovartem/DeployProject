[{"C:\\OSPanel\\domains\\epam-app\\src\\index.tsx":"1","C:\\OSPanel\\domains\\epam-app\\src\\reportWebVitals.ts":"2","C:\\OSPanel\\domains\\epam-app\\src\\App.tsx":"3","C:\\OSPanel\\domains\\epam-app\\src\\api\\api.ts":"4","C:\\OSPanel\\domains\\epam-app\\src\\redux\\taskReducer.ts":"5","C:\\OSPanel\\domains\\epam-app\\src\\redux\\store.ts":"6","C:\\OSPanel\\domains\\epam-app\\src\\api\\taskApi.ts":"7","C:\\OSPanel\\domains\\epam-app\\src\\Components\\TimeScale\\TaskItem\\TaskItem.tsx":"8","C:\\OSPanel\\domains\\epam-app\\src\\utils\\array-helpers.ts":"9","C:\\OSPanel\\domains\\epam-app\\src\\Components\\TimeScale\\TimeScale.tsx":"10","C:\\OSPanel\\domains\\epam-app\\src\\Components\\TimeScale\\TimeScaleContainer.tsx":"11","C:\\OSPanel\\domains\\epam-app\\src\\Components\\TimeScale\\TaskItem\\TaskItemContainer.tsx":"12","C:\\OSPanel\\domains\\front1\\src\\index.tsx":"13","C:\\OSPanel\\domains\\front1\\src\\reportWebVitals.ts":"14","C:\\OSPanel\\domains\\front1\\src\\App.tsx":"15","C:\\OSPanel\\domains\\front1\\src\\redux\\store.ts":"16","C:\\OSPanel\\domains\\front1\\src\\redux\\appReducer.ts":"17","C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\ToDoListContainer.tsx":"18","C:\\OSPanel\\domains\\front1\\src\\Components\\Header\\Header.tsx":"19","C:\\OSPanel\\domains\\front1\\src\\Components\\Login\\Login.tsx":"20","C:\\OSPanel\\domains\\front1\\src\\redux\\authReducer.ts":"21","C:\\OSPanel\\domains\\front1\\src\\redux\\taskReducer.ts":"22","C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\ToDoList.tsx":"23","C:\\OSPanel\\domains\\front1\\src\\Components\\Header\\MenuBrowser.tsx":"24","C:\\OSPanel\\domains\\front1\\src\\Components\\Header\\MenuMobile.tsx":"25","C:\\OSPanel\\domains\\front1\\src\\api\\authAPI.ts":"26","C:\\OSPanel\\domains\\front1\\src\\api\\taskApi.ts":"27","C:\\OSPanel\\domains\\front1\\src\\Components\\TimeScale\\TimeScaleContainer.tsx":"28","C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\Settings\\SettingsModal.tsx":"29","C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeaderContainer.tsx":"30","C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\NewTaskForm\\NewTaskFormContainer.tsx":"31","C:\\OSPanel\\domains\\front1\\src\\api\\api.ts":"32","C:\\OSPanel\\domains\\front1\\src\\Components\\TimeScale\\TimeScale.tsx":"33","C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeader.tsx":"34","C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\NewTaskForm\\NewTaskForm.tsx":"35","C:\\OSPanel\\domains\\front1\\src\\utils\\array-helpers.ts":"36","C:\\OSPanel\\domains\\front1\\src\\Components\\TimeScale\\TaskItem\\TaskItemContainer.tsx":"37","C:\\OSPanel\\domains\\front1\\src\\Components\\TimeScale\\TaskItem\\TaskItem.tsx":"38","C:\\OSPanel\\domains\\front1\\src\\Components\\Header\\HeaderContainer.tsx":"39","C:\\OSPanel\\domains\\front1\\src\\Components\\Orders\\OrdersContainer.tsx":"40","C:\\OSPanel\\domains\\front1\\src\\Components\\Orders\\Orders.tsx":"41","C:\\OSPanel\\domains\\front1\\src\\Components\\Header\\MenuMobileContainer.tsx":"42","C:\\OSPanel\\domains\\front1\\src\\utils\\Formik\\CreateAntField.tsx":"43","C:\\OSPanel\\domains\\front1\\src\\Components\\Login\\LoginForm.tsx":"44","C:\\OSPanel\\domains\\front1\\src\\utils\\Formik\\ValidateFields.ts":"45","C:\\OSPanel\\domains\\front1\\src\\api\\userAPI.ts":"46","C:\\OSPanel\\domains\\front1\\src\\Components\\TasksTree\\TasksTree.tsx":"47","C:\\OSPanel\\domains\\front1\\src\\Components\\TasksTree\\TasksTreeContainer.tsx":"48","C:\\OSPanel\\domains\\front1\\src\\redux\\TaskListReducer.ts":"49","C:\\OSPanel\\domains\\front1\\src\\api\\taskListAPI.ts":"50","C:\\OSPanel\\domains\\front1\\src\\Components\\TasksTree\\TasksTreeMobile.tsx":"51","C:\\OSPanel\\domains\\front1\\src\\Components\\Login\\LoginContainer.tsx":"52","C:\\OSPanel\\domains\\front1\\src\\Components\\Register\\Register.tsx":"53","C:\\OSPanel\\domains\\front1\\src\\Components\\Register\\RegisterForm.tsx":"54","C:\\OSPanel\\domains\\front1\\src\\Components\\Register\\RegisterContainer.tsx":"55","C:\\OSPanel\\domains\\front1\\src\\Components\\Header\\MenuBrowserConainer.tsx":"56"},{"size":523,"mtime":1611574553464,"results":"57","hashOfConfig":"58"},{"size":440,"mtime":1611045973906,"results":"59","hashOfConfig":"58"},{"size":489,"mtime":1611647363642,"results":"60","hashOfConfig":"58"},{"size":490,"mtime":1611575513710,"results":"61","hashOfConfig":"58"},{"size":4730,"mtime":1611647323257,"results":"62","hashOfConfig":"58"},{"size":665,"mtime":1611575234925,"results":"63","hashOfConfig":"58"},{"size":1866,"mtime":1611574837519,"results":"64","hashOfConfig":"58"},{"size":2997,"mtime":1611563564363,"results":"65","hashOfConfig":"58"},{"size":318,"mtime":1611575192165,"results":"66","hashOfConfig":"58"},{"size":3830,"mtime":1611737108320,"results":"67","hashOfConfig":"58"},{"size":961,"mtime":1611575085038,"results":"68","hashOfConfig":"58"},{"size":832,"mtime":1611575102823,"results":"69","hashOfConfig":"58"},{"size":525,"mtime":1612178342840,"results":"70","hashOfConfig":"71"},{"size":440,"mtime":1611045973906,"results":"72","hashOfConfig":"71"},{"size":4010,"mtime":1612261378060,"results":"73","hashOfConfig":"71"},{"size":873,"mtime":1612173698943,"results":"74","hashOfConfig":"71"},{"size":1600,"mtime":1612178342840,"results":"75","hashOfConfig":"71"},{"size":727,"mtime":1611825054146,"results":"76","hashOfConfig":"71"},{"size":2199,"mtime":1612265151716,"results":"77","hashOfConfig":"71"},{"size":1526,"mtime":1612255772781,"results":"78","hashOfConfig":"71"},{"size":3111,"mtime":1612258341320,"results":"79","hashOfConfig":"71"},{"size":4730,"mtime":1611647323257,"results":"80","hashOfConfig":"71"},{"size":1806,"mtime":1611764154882,"results":"81","hashOfConfig":"71"},{"size":3024,"mtime":1612265528837,"results":"82","hashOfConfig":"71"},{"size":5064,"mtime":1612265176909,"results":"83","hashOfConfig":"71"},{"size":2127,"mtime":1612256877649,"results":"84","hashOfConfig":"71"},{"size":1878,"mtime":1612178342839,"results":"85","hashOfConfig":"71"},{"size":961,"mtime":1611575085038,"results":"86","hashOfConfig":"71"},{"size":569,"mtime":1611564356937,"results":"87","hashOfConfig":"71"},{"size":998,"mtime":1611760413372,"results":"88","hashOfConfig":"71"},{"size":959,"mtime":1611760223445,"results":"89","hashOfConfig":"71"},{"size":495,"mtime":1612188704773,"results":"90","hashOfConfig":"71"},{"size":3844,"mtime":1612191736175,"results":"91","hashOfConfig":"71"},{"size":4536,"mtime":1611760415596,"results":"92","hashOfConfig":"71"},{"size":5013,"mtime":1611647750072,"results":"93","hashOfConfig":"71"},{"size":318,"mtime":1611575192165,"results":"94","hashOfConfig":"71"},{"size":832,"mtime":1611575102823,"results":"95","hashOfConfig":"71"},{"size":2923,"mtime":1611739117771,"results":"96","hashOfConfig":"71"},{"size":713,"mtime":1612190659226,"results":"97","hashOfConfig":"71"},{"size":709,"mtime":1611924636969,"results":"98","hashOfConfig":"71"},{"size":308,"mtime":1611923733716,"results":"99","hashOfConfig":"71"},{"size":805,"mtime":1612189115138,"results":"100","hashOfConfig":"71"},{"size":3736,"mtime":1612259918527,"results":"101","hashOfConfig":"71"},{"size":1508,"mtime":1612259199052,"results":"102","hashOfConfig":"71"},{"size":1096,"mtime":1612255772842,"results":"103","hashOfConfig":"71"},{"size":717,"mtime":1612261199155,"results":"104","hashOfConfig":"71"},{"size":1518,"mtime":1612261732108,"results":"105","hashOfConfig":"71"},{"size":711,"mtime":1612173866115,"results":"106","hashOfConfig":"71"},{"size":2447,"mtime":1612255772792,"results":"107","hashOfConfig":"71"},{"size":653,"mtime":1612255772789,"results":"108","hashOfConfig":"71"},{"size":192,"mtime":1612176243502,"results":"109","hashOfConfig":"71"},{"size":708,"mtime":1612197613887,"results":"110","hashOfConfig":"71"},{"size":1322,"mtime":1612258936367,"results":"111","hashOfConfig":"71"},{"size":2110,"mtime":1612261006098,"results":"112","hashOfConfig":"71"},{"size":734,"mtime":1612258579867,"results":"113","hashOfConfig":"71"},{"size":798,"mtime":1612265114824,"results":"114","hashOfConfig":"71"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"136sl52",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"1p43c50",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"142"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"142"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"142"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"142"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"142"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"142"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"142"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\OSPanel\\domains\\epam-app\\src\\index.tsx",[],["236","237"],"C:\\OSPanel\\domains\\epam-app\\src\\reportWebVitals.ts",[],"C:\\OSPanel\\domains\\epam-app\\src\\App.tsx",[],"C:\\OSPanel\\domains\\epam-app\\src\\api\\api.ts",[],"C:\\OSPanel\\domains\\epam-app\\src\\redux\\taskReducer.ts",[],"C:\\OSPanel\\domains\\epam-app\\src\\redux\\store.ts",[],"C:\\OSPanel\\domains\\epam-app\\src\\api\\taskApi.ts",[],"C:\\OSPanel\\domains\\epam-app\\src\\Components\\TimeScale\\TaskItem\\TaskItem.tsx",[],"C:\\OSPanel\\domains\\epam-app\\src\\utils\\array-helpers.ts",[],"C:\\OSPanel\\domains\\epam-app\\src\\Components\\TimeScale\\TimeScale.tsx",["238"],"C:\\OSPanel\\domains\\epam-app\\src\\Components\\TimeScale\\TimeScaleContainer.tsx",[],"C:\\OSPanel\\domains\\epam-app\\src\\Components\\TimeScale\\TaskItem\\TaskItemContainer.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\index.tsx",[],["239","240"],"C:\\OSPanel\\domains\\front1\\src\\reportWebVitals.ts",[],"C:\\OSPanel\\domains\\front1\\src\\App.tsx",["241","242"],"C:\\OSPanel\\domains\\front1\\src\\redux\\store.ts",[],"C:\\OSPanel\\domains\\front1\\src\\redux\\appReducer.ts",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\ToDoListContainer.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\Header\\Header.tsx",["243","244","245"],"C:\\OSPanel\\domains\\front1\\src\\Components\\Login\\Login.tsx",["246","247","248","249","250"],"import React from 'react'\r\nimport { LoginPropsType } from './LoginContainer'\r\nimport { List, InputItem, Checkbox } from 'antd-mobile'\r\nimport { Formik } from \"formik\"\r\nimport moment from \"moment\"\r\nimport LoginForm from './LoginForm'\r\nimport { propTypes } from 'react-bootstrap/esm/Image'\r\nimport { Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CheckboxItem = Checkbox.CheckboxItem;\r\n\r\nconst initialValues = {\r\n    // bookingClient: \"\",\r\n    // bookingDate: moment(Date.now()),\r\n    // bookingTime: moment(Date.now()),\r\n    // selectOptions: [\"Mark\", \"Bob\", \"Anthony\"]\r\n}\r\n\r\n// export const dateFormat = \"YYYY--MM-DD\";\r\n// export const timeFormat = \"h:mm A\";\r\n\r\nexport type OwnLoginPropsType = {}\r\n\r\nconst Login: React.FC<LoginPropsType> = (props) => {\r\n    const handleSubmit = (formProps: any) => {\r\n        console.log('formProps: ', formProps)\r\n        if (!formProps.remember) {\r\n            formProps.remember = false\r\n        }\r\n        props.login(formProps)\r\n    }\r\n\r\n    console.log(props)\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"mb-5 mx-auto\">Login Form</h1>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={handleSubmit}\r\n                render={LoginForm}\r\n                // location= {props.location}\r\n            />\r\n            <div className=\"mt-3\">\r\n                <Link to={props.location +\"register\"}><Button type=\"link\" block>Register</Button></Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\OSPanel\\domains\\front1\\src\\redux\\authReducer.ts",[],"C:\\OSPanel\\domains\\front1\\src\\redux\\taskReducer.ts",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\ToDoList.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\Header\\MenuBrowser.tsx",["251","252","253","254","255","256"],"C:\\OSPanel\\domains\\front1\\src\\Components\\Header\\MenuMobile.tsx",["257","258"],"C:\\OSPanel\\domains\\front1\\src\\api\\authAPI.ts",["259","260"],"C:\\OSPanel\\domains\\front1\\src\\api\\taskApi.ts",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\TimeScale\\TimeScaleContainer.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\Settings\\SettingsModal.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeaderContainer.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\NewTaskForm\\NewTaskFormContainer.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\api\\api.ts",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\TimeScale\\TimeScale.tsx",["261"],"import React, { useEffect, useState } from 'react'\r\nimport { TaskType } from '../../Types/types'\r\nimport moment from 'moment'\r\nimport { TimeScalePropsType } from './TimeScaleContainer'\r\nimport { Divider, Spin, Tooltip, message } from 'antd'\r\nimport TaskItem from './TaskItem/TaskItemContainer'\r\nimport { sortTaskArrayByParams } from '../../utils/array-helpers'\r\n\r\nexport type OwnTaskTimeScaleType = {}\r\nconst TimeScale: React.FC<TimeScalePropsType> = (props) => {\r\n    type SelestedDatesType = typeof props.dateInterval\r\n    const [selestedDates, setSelectedDates] = useState<SelestedDatesType>({ startDate: moment(null), endDate: moment() })\r\n    useEffect(() => {\r\n        if (\r\n            props.dateInterval.startDate.isSame(selestedDates.startDate.format('YYYY-MM-DD'), \"day\" ) &&\r\n            props.dateInterval.endDate.isSame(selestedDates.endDate.format('YYYY-MM-DD'), \"day\" )\r\n        ) { }\r\n        else {\r\n            if (props.dateInterval.startDate !== null) {\r\n                props.getTaskList(\r\n                    props.dateInterval.startDate.format('YYYY-MM-DD'),\r\n                    props.dateInterval.endDate.format('YYYY-MM-DD')\r\n                )\r\n                setSelectedDates(props.dateInterval)\r\n            }\r\n        }\r\n    }, [props.dateInterval])\r\n\r\n    useEffect(() => {\r\n        if (props.errorMessage !== null) {\r\n            message.success(props.errorMessage)\r\n        }\r\n    }, [props.errorMessage])\r\n\r\n    if (props.taskList !== null) {\r\n        return (\r\n            <>\r\n                {getTimeScaleArrey(props.taskList)}\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <Spin key=\"spin\" size=\"large\" />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimeScale\r\n\r\n\r\nconst getTimeScaleArrey = (taskList: Array<TaskType>): Array<React.ReactElement<string>> => {\r\n    let timeScaleArrey: Array<React.ReactElement<string>> = []\r\n    let tomorowTasks: Array<TaskType> = []\r\n\r\n    taskList.sort(sortTaskArrayByParams('time')).sort(sortTaskArrayByParams('date'))\r\n\r\n    const getHeadlineLabel = (task: TaskType) => {\r\n        return moment(task.date).format('DD MMMM')\r\n    }\r\n\r\n    let headlineDate: string | null = null\r\n\r\n    if (taskList !== null && taskList.length > 0) {\r\n        headlineDate = getHeadlineLabel(taskList[0])\r\n        timeScaleArrey.push(\r\n            <h3 key={headlineDate + 'title'}>{headlineDate}:</h3>\r\n        )\r\n    }\r\n\r\n    for (let index: number = 0; index < 24; index++) {\r\n        if (taskList.length > 0) {\r\n            timeScaleArrey.push(\r\n                <Divider key={index + 'to' + headlineDate} orientation=\"left\">\r\n                    {index <= 9 ? '0' : null}{index}:00\r\n                </Divider>\r\n            )\r\n        } else {\r\n            timeScaleArrey.push(<h3 key=\"noTasks\">no tasks</h3>)\r\n            break\r\n        }\r\n\r\n        if (taskList !== null) {\r\n            for (let i = 0; i < taskList.length; i++) {\r\n                const element: TaskType = taskList[i]\r\n                const timeVal = Number(element.time.split(':', 1))\r\n                const nextHour = index + 1\r\n                if (timeVal >= index && timeVal < nextHour) {\r\n                    if (getHeadlineLabel(element) === headlineDate) {\r\n                        timeScaleArrey.push(\r\n                            <Tooltip key={index + '-' + element.id} placement=\"topLeft\" title={element.descriptions}>\r\n                                <TaskItem element={element} />\r\n                            </Tooltip>\r\n                        )\r\n                    }\r\n                    else {\r\n                        tomorowTasks.push(element)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (tomorowTasks.length > 0) {\r\n        timeScaleArrey = timeScaleArrey.concat(getTimeScaleArrey(tomorowTasks))\r\n    }\r\n\r\n    return timeScaleArrey\r\n}","C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeader.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\ToDo\\NewTaskForm\\NewTaskForm.tsx",["262"],"import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport { Form, Input, Button, TimePicker, DatePicker, Drawer, Spin, message } from 'antd'\r\nimport { NewTaskFormPropsType } from './NewTaskFormContainer'\r\nimport './../style.css'\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n}\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n}\r\n\r\nexport type NewTaskFormOwnPropsType = {\r\n    onClose: () => void\r\n    visible: boolean,\r\n    setVisible: (visible: boolean) => void\r\n}\r\n\r\nconst { TextArea } = Input\r\n\r\nconst timeFormat: string = 'HH:mm'\r\n\r\nconst NewTaskForm: React.FC<NewTaskFormPropsType> = (props) => {\r\n    const [form] = Form.useForm()\r\n    const [selectedDate, setSelectedDate] = useState<moment.Moment>(moment())\r\n    const [saveStatus, setSaveStatus] = useState<string>(props.taskSaveStatus)\r\n\r\n    useEffect(() => {\r\n        switch (props.taskSaveStatus) {\r\n            case 'inProgress':\r\n                setSaveStatus(props.taskSaveStatus)\r\n                break\r\n            case 'success':\r\n                message.success('The task was successfully created')\r\n                props.onClose()\r\n                setSaveStatus('')\r\n                onReset()\r\n                break\r\n            case 'error':\r\n                message.error('Error: ' + props.errorMessage)\r\n                setSaveStatus(props.taskSaveStatus)\r\n                break\r\n\r\n            default:\r\n                break\r\n        }\r\n    }, [props.taskSaveStatus])\r\n\r\n    type OnFinishType = {\r\n        taskName: string,\r\n        date: moment.Moment,\r\n        taskTime: moment.Moment,\r\n        description?: string\r\n    }\r\n    const onFinish = (values: OnFinishType) => {\r\n        const data = {\r\n            date: values.date.format('YYYY-MM-DD'),\r\n            taskTime: values.taskTime.format('HH:mm'),\r\n            taskName: values.taskName,\r\n            user_id: 1,\r\n            description: values.description\r\n        }\r\n\r\n        if (!moment(selectedDate.format('YYYY-MM-DD')).isBetween(\r\n            props.dateInterval.startDate.format('YYYY-MM-DD'),\r\n            props.dateInterval.endDate.format('YYYY-MM-DD'),\r\n            undefined, '[]'\r\n        )) {\r\n            props.createNewTask(data, false)\r\n        } else {\r\n\r\n            props.createNewTask(data, true)\r\n        }\r\n    }\r\n\r\n    const onReset = () => {\r\n        form.resetFields()\r\n    }\r\n\r\n    const onDateChange = (value: moment.Moment | null, dateString: string): void => {\r\n        if (value !== null) {\r\n            setSelectedDate(value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            title={\"Create New Task for \" + selectedDate.format('DD MMM YYYY')}\r\n            placement=\"right\"\r\n            closable={true}\r\n            onClose={props.onClose}\r\n            visible={props.visible}\r\n            width=\"90%\"\r\n        >\r\n            <Form\r\n                {...layout}\r\n                form={form}\r\n                name=\"control-hooks\"\r\n                onFinish={onFinish}\r\n            >\r\n                <Form.Item\r\n                    label=\"Task name\"\r\n                    name=\"taskName\"\r\n                    rules={[{ required: true, message: 'Please input task name!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Task date\"\r\n                    name=\"date\"\r\n                    initialValue={selectedDate}\r\n                    rules={[{ required: true, message: 'Please input task date!' }]}\r\n                >\r\n                    <DatePicker\r\n                        onChange={onDateChange}\r\n                        format='DD-MM-YYYY'\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Task time\"\r\n                    name=\"taskTime\"\r\n                    rules={[{ required: true, message: 'Please input task time!' }]}\r\n                >\r\n                    <TimePicker\r\n                        format={timeFormat}\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n                >\r\n                    <TextArea rows={2} />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    {saveStatus === 'inProgress' ?\r\n                        <Spin></Spin>\r\n                        :\r\n                        <>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Create\r\n                            </Button>\r\n                            <Button className=\"ml-3\" type=\"primary\" onClick={onReset}>\r\n                                Reset\r\n                            </Button>\r\n                        </>\r\n                    }\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        </Drawer>\r\n    )\r\n}\r\n\r\n\r\nexport default NewTaskForm","C:\\OSPanel\\domains\\front1\\src\\utils\\array-helpers.ts",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\TimeScale\\TaskItem\\TaskItemContainer.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\TimeScale\\TaskItem\\TaskItem.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\Header\\HeaderContainer.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\Orders\\OrdersContainer.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\Orders\\Orders.tsx",["263"],"import { formatCountdown } from 'antd/lib/statistic/utils'\r\nimport React from 'react'\r\nimport { OrdersPropsType } from './OrdersContainer'\r\n\r\nexport type OwnOrdersPropsType = {}\r\nconst Orders: React.FC<OrdersPropsType> = (props) => {\r\n    return(\r\n        <div>Orders</div>\r\n    )\r\n}\r\n\r\nexport default Orders","C:\\OSPanel\\domains\\front1\\src\\Components\\Header\\MenuMobileContainer.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\utils\\Formik\\CreateAntField.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\Login\\LoginForm.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\utils\\Formik\\ValidateFields.ts",[],"C:\\OSPanel\\domains\\front1\\src\\api\\userAPI.ts",["264","265"],"import { NewTaskDataType, TaskType } from '../Types/types'\r\nimport {instance} from './api'\r\n\r\nexport const userAPI = {\r\n    checkUserForExistence(userName: string) {\r\n        return instance.get<any>(`users?userName=${userName}`)\r\n        .then(response => {\r\n            return response.status === 200 ? response : null\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                return err.response\r\n            } else if (err.request) {\r\n                console.log('request', err.request)\r\n            } else {\r\n                console.log('anything else: ', err)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n}","C:\\OSPanel\\domains\\front1\\src\\Components\\TasksTree\\TasksTree.tsx",["266","267","268","269","270","271","272"],"C:\\OSPanel\\domains\\front1\\src\\Components\\TasksTree\\TasksTreeContainer.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\redux\\TaskListReducer.ts",["273"],"import { Dispatch } from \"react\";\r\nimport { BaseThunkType, InferActionsTypes } from \"./store\";\r\nimport { taskListAPI } from './../api/taskListAPI'\r\n\r\n\r\nexport type InitialStateType = {\r\n    taskList: Array<any>,\r\n    // taskListIsFetching: boolean,\r\n    // taskSaveStatus: 'no' | 'inProgress' | 'success' | 'error'\r\n    // errorMessage: null | string,\r\n    // isInterval: boolean,\r\n    // dateInterval: {\r\n    //     startDate: moment.Moment,\r\n    //     endDate: moment.Moment\r\n    // }\r\n}\r\n\r\nlet initialState:InitialStateType = {\r\n    taskList: [],\r\n    // taskListIsFetching: false,\r\n    // taskSaveStatus: 'no',\r\n    // errorMessage: null,\r\n    // isInterval: false,\r\n    // dateInterval: {\r\n    //     startDate: moment(),\r\n    //     endDate: moment()\r\n    // }\r\n}\r\n\r\nconst taskListReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/TASK_LIST/SET_TASK_LIST':\r\n            return {...state, taskList: action.taskList}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setTaskList: (taskList: Array<any>) => ({ type: 'SN/TASK_LIST/SET_TASK_LIST', taskList } as const),\r\n    // setTaskSaveStatus: (taskSaveStatus: 'no' | 'inProgress' | 'success' | 'error') => ({ type: 'SN/TASK/SET_TASK_SAVE_STATUS', taskSaveStatus } as const),\r\n    // setErrorMessage: (message: string | null) => ({type: 'SN/TASK/SET_ERROR_MESSAGE', message} as const),\r\n    // setTaskListIsFetching: (isFetchingValue: boolean) => ({type: 'SN/TASK/SET_TASK_LIST_IS_FETCHING', isFetchingValue} as const),\r\n    // setIsInterval: (isInterval: boolean, date: {startDate: moment.Moment, endDate: moment.Moment}) => ({type: 'SN/TASK/SET_IS_INTERVAL', isInterval, date} as const)\r\n}\r\n\r\nexport const getTaskList = (): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        // dispatch(actions.setTaskListIsFetching(true))\r\n\r\n        let response = await taskListAPI.getTaskList()\r\n        //console.log(response)\r\n\r\n        if (response !== undefined && response !== null) {\r\n            dispatch(actions.setTaskList(response.data.Tasks))\r\n        } else {\r\n            // add error message\r\n        }\r\n        // dispatch(actions.setTaskListIsFetching(false))\r\n    }\r\n}\r\n\r\nexport default taskListReducer\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\nexport type DispatchType = Dispatch<ActionsTypes>","C:\\OSPanel\\domains\\front1\\src\\api\\taskListAPI.ts",["274","275"],"import { NewTaskDataType, TaskType } from '../Types/types'\r\nimport {instance} from './api'\r\n\r\nexport const taskListAPI = {\r\n    getTaskList() {\r\n        return instance.get<any>(`taskList`)\r\n        .then(response => {\r\n            return response.status === 200 ? response : null\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                return err.response\r\n            } else if (err.request) {\r\n                //console.log('request', err.request)\r\n            } else {\r\n                //console.log('anything else: ', err)\r\n            }\r\n            return null\r\n        })\r\n    },\r\n    createNewTask() {\r\n\r\n    },\r\n    deleteTask() {\r\n\r\n    },\r\n    updateTask() {\r\n\r\n    }\r\n}","C:\\OSPanel\\domains\\front1\\src\\Components\\TasksTree\\TasksTreeMobile.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\Login\\LoginContainer.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\Register\\Register.tsx",["276","277","278","279"],"C:\\OSPanel\\domains\\front1\\src\\Components\\Register\\RegisterForm.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\Register\\RegisterContainer.tsx",[],"C:\\OSPanel\\domains\\front1\\src\\Components\\Header\\MenuBrowserConainer.tsx",[],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":27,"column":8,"nodeType":"286","endLine":27,"endColumn":28,"suggestions":"287"},{"ruleId":"280","replacedBy":"288"},{"ruleId":"282","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":29,"column":20,"nodeType":"292","messageId":"293","endLine":29,"endColumn":31},{"ruleId":"284","severity":1,"message":"294","line":48,"column":6,"nodeType":"286","endLine":48,"endColumn":25,"suggestions":"295"},{"ruleId":"290","severity":1,"message":"296","line":3,"column":5,"nodeType":"292","messageId":"293","endLine":3,"endColumn":16},{"ruleId":"290","severity":1,"message":"297","line":4,"column":5,"nodeType":"292","messageId":"293","endLine":4,"endColumn":15},{"ruleId":"290","severity":1,"message":"298","line":5,"column":5,"nodeType":"292","messageId":"293","endLine":5,"endColumn":14},{"ruleId":"290","severity":1,"message":"299","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":14},{"ruleId":"290","severity":1,"message":"300","line":3,"column":16,"nodeType":"292","messageId":"293","endLine":3,"endColumn":25},{"ruleId":"290","severity":1,"message":"301","line":5,"column":8,"nodeType":"292","messageId":"293","endLine":5,"endColumn":14},{"ruleId":"290","severity":1,"message":"302","line":7,"column":10,"nodeType":"292","messageId":"293","endLine":7,"endColumn":19},{"ruleId":"290","severity":1,"message":"303","line":9,"column":7,"nodeType":"292","messageId":"293","endLine":9,"endColumn":19},{"ruleId":"290","severity":1,"message":"304","line":2,"column":10,"nodeType":"292","messageId":"293","endLine":2,"endColumn":16},{"ruleId":"290","severity":1,"message":"305","line":5,"column":9,"nodeType":"292","messageId":"293","endLine":5,"endColumn":23},{"ruleId":"290","severity":1,"message":"306","line":7,"column":10,"nodeType":"292","messageId":"293","endLine":7,"endColumn":22},{"ruleId":"290","severity":1,"message":"307","line":8,"column":10,"nodeType":"292","messageId":"293","endLine":8,"endColumn":22},{"ruleId":"290","severity":1,"message":"308","line":20,"column":12,"nodeType":"292","messageId":"293","endLine":20,"endColumn":17},{"ruleId":"290","severity":1,"message":"309","line":20,"column":19,"nodeType":"292","messageId":"293","endLine":20,"endColumn":27},{"ruleId":"290","severity":1,"message":"310","line":22,"column":22,"nodeType":"292","messageId":"293","endLine":22,"endColumn":33},{"ruleId":"290","severity":1,"message":"311","line":59,"column":33,"nodeType":"292","messageId":"293","endLine":59,"endColumn":38},{"ruleId":"290","severity":1,"message":"312","line":1,"column":19,"nodeType":"292","messageId":"293","endLine":1,"endColumn":34},{"ruleId":"290","severity":1,"message":"313","line":3,"column":6,"nodeType":"292","messageId":"293","endLine":3,"endColumn":24},{"ruleId":"284","severity":1,"message":"285","line":27,"column":8,"nodeType":"286","endLine":27,"endColumn":28,"suggestions":"314"},{"ruleId":"284","severity":1,"message":"315","line":49,"column":8,"nodeType":"286","endLine":49,"endColumn":30,"suggestions":"316"},{"ruleId":"290","severity":1,"message":"317","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"290","severity":1,"message":"318","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"290","severity":1,"message":"319","line":1,"column":27,"nodeType":"292","messageId":"293","endLine":1,"endColumn":35},{"ruleId":"290","severity":1,"message":"320","line":1,"column":28,"nodeType":"292","messageId":"293","endLine":1,"endColumn":36},{"ruleId":"290","severity":1,"message":"321","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":20},{"ruleId":"290","severity":1,"message":"322","line":4,"column":22,"nodeType":"292","messageId":"293","endLine":4,"endColumn":30},{"ruleId":"290","severity":1,"message":"304","line":4,"column":32,"nodeType":"292","messageId":"293","endLine":4,"endColumn":38},{"ruleId":"290","severity":1,"message":"323","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":25},{"ruleId":"290","severity":1,"message":"324","line":5,"column":27,"nodeType":"292","messageId":"293","endLine":5,"endColumn":42},{"ruleId":"284","severity":1,"message":"325","line":15,"column":8,"nodeType":"286","endLine":15,"endColumn":24,"suggestions":"326"},{"ruleId":"327","severity":1,"message":"328","line":34,"column":13,"nodeType":"329","messageId":"330","endLine":34,"endColumn":30},{"ruleId":"290","severity":1,"message":"318","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"290","severity":1,"message":"319","line":1,"column":27,"nodeType":"292","messageId":"293","endLine":1,"endColumn":35},{"ruleId":"290","severity":1,"message":"302","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":19},{"ruleId":"290","severity":1,"message":"331","line":6,"column":10,"nodeType":"292","messageId":"293","endLine":6,"endColumn":18},{"ruleId":"290","severity":1,"message":"332","line":6,"column":20,"nodeType":"292","messageId":"293","endLine":6,"endColumn":25},{"ruleId":"284","severity":1,"message":"333","line":24,"column":8,"nodeType":"286","endLine":24,"endColumn":22,"suggestions":"334"},"no-native-reassign",["335"],"no-negated-in-lhs",["336"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props', 'selestedDates.endDate', and 'selestedDates.startDate'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["337"],["335"],["336"],"@typescript-eslint/no-unused-vars","'setLocation' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'location' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["338"],"'BrowserView' is defined but never used.","'MobileView' is defined but never used.","'isBrowser' is defined but never used.","'List' is defined but never used.","'InputItem' is defined but never used.","'moment' is defined but never used.","'propTypes' is defined but never used.","'CheckboxItem' is assigned a value but never used.","'Button' is defined but never used.","'LogoutOutlined' is defined but never used.","'TaskListType' is defined but never used.","'MenuDataType' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'setInitData' is assigned a value but never used.","'label' is assigned a value but never used.","'APIResponseType' is defined but never used.","'MeResponseDataType' is defined but never used.",["339"],"React Hook useEffect has missing dependencies: 'onReset' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["340"],"'formatCountdown' is defined but never used.","'NewTaskDataType' is defined but never used.","'TaskType' is defined but never used.","'useState' is defined but never used.","'DatePicker' is defined but never used.","'Checkbox' is defined but never used.","'FileAddOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["341"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'Redirect' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'props.appLocation'. Either include them or remove the dependency array.",["342"],"no-global-assign","no-unsafe-negation",{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"343","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},"Update the dependencies array to be: [props, props.dateInterval, selestedDates.endDate, selestedDates.startDate]",{"range":"354","text":"355"},"Update the dependencies array to be: [location, props, props.initialized]",{"range":"356","text":"357"},{"range":"358","text":"355"},"Update the dependencies array to be: [onReset, props, props.taskSaveStatus]",{"range":"359","text":"360"},"Update the dependencies array to be: [props, props.taskList]",{"range":"361","text":"362"},"Update the dependencies array to be: [history, props.appLocation, props.isAuth]",{"range":"363","text":"364"},[1258,1278],"[props, props.dateInterval, selestedDates.endDate, selestedDates.startDate]",[1864,1883],"[location, props, props.initialized]",[1258,1278],[1499,1521],"[onReset, props, props.taskSaveStatus]",[561,577],"[props, props.taskList]",[810,824],"[history, props.appLocation, props.isAuth]"]