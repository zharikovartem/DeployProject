[{"C:\\OpenServer\\domains\\DeployProject\\src\\index.tsx":"1","C:\\OpenServer\\domains\\DeployProject\\src\\reportWebVitals.ts":"2","C:\\OpenServer\\domains\\DeployProject\\src\\App.tsx":"3","C:\\OpenServer\\domains\\DeployProject\\src\\redux\\store.ts":"4","C:\\OpenServer\\domains\\DeployProject\\src\\redux\\authReducer.ts":"5","C:\\OpenServer\\domains\\DeployProject\\src\\redux\\appReducer.ts":"6","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Header\\HeaderContainer.tsx":"7","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Login\\LoginContainer.tsx":"8","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Orders\\OrdersContainer.tsx":"9","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoContainer.tsx":"10","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TasksTreeContainer.tsx":"11","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\UsersContainer.tsx":"12","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Register\\RegisterContainer.tsx":"13","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\CurrentUser\\CurrentUserContainer.tsx":"14","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\ProjectsContainer.tsx":"15","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\CurrentProjectContainer.tsx":"16","C:\\OpenServer\\domains\\DeployProject\\src\\redux\\usersReducer.ts":"17","C:\\OpenServer\\domains\\DeployProject\\src\\redux\\projectReducer.ts":"18","C:\\OpenServer\\domains\\DeployProject\\src\\redux\\codeReducer.ts":"19","C:\\OpenServer\\domains\\DeployProject\\src\\redux\\TaskListReducer.ts":"20","C:\\OpenServer\\domains\\DeployProject\\src\\redux\\taskReducer.ts":"21","C:\\OpenServer\\domains\\DeployProject\\src\\api\\authAPI.ts":"22","C:\\OpenServer\\domains\\DeployProject\\src\\redux\\usersSelector.ts":"23","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoMobile.tsx":"24","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Login\\Login.tsx":"25","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Header\\Header.tsx":"26","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TasksTreeBrowser.tsx":"27","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoBrowser.tsx":"28","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Orders\\Orders.tsx":"29","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TasksTreeMobile.tsx":"30","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\Users.tsx":"31","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\UsersMobile.tsx":"32","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Register\\Register.tsx":"33","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\CurrentUser\\CurrentUser.tsx":"34","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\CurrentUser\\CurrentUserMobile.tsx":"35","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\CurrentProject.tsx":"36","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\Projects.tsx":"37","C:\\OpenServer\\domains\\DeployProject\\src\\api\\usersAPI.ts":"38","C:\\OpenServer\\domains\\DeployProject\\src\\api\\taskListAPI.ts":"39","C:\\OpenServer\\domains\\DeployProject\\src\\api\\taskApi.ts":"40","C:\\OpenServer\\domains\\DeployProject\\src\\api\\api.ts":"41","C:\\OpenServer\\domains\\DeployProject\\src\\api\\ControllerMethodsAPI.ts":"42","C:\\OpenServer\\domains\\DeployProject\\src\\api\\projectAPI.ts":"43","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskListActions\\TaskListActions.ts":"44","C:\\OpenServer\\domains\\DeployProject\\src\\utils\\Date\\NewDeteByString.ts":"45","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Login\\LoginForm.tsx":"46","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Header\\MenuContainer.tsx":"47","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Register\\RegisterForm.tsx":"48","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\Settings\\SettingsModalContainer.tsx":"49","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoForm\\ToDoForm.tsx":"50","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\BackendContainer.tsx":"51","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeaderMobile.tsx":"52","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\CurrentUser\\UserDataForm.tsx":"53","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeader.tsx":"54","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeMobileItem.tsx":"55","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\TimeScale\\TimeScale.tsx":"56","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\NewTaskTreeForm.tsx":"57","C:\\OpenServer\\domains\\DeployProject\\src\\utils\\Formik\\ValidateFields.ts":"58","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\TimeScale\\TimeScaleContainer.tsx":"59","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeaderContainer.tsx":"60","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Header\\MenuBrowser.tsx":"61","C:\\OpenServer\\domains\\DeployProject\\src\\utils\\Formik\\CreateAntField.tsx":"62","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Header\\MenuMobile.tsx":"63","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Backend.tsx":"64","C:\\OpenServer\\domains\\DeployProject\\src\\utils\\array-helpers.ts":"65","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\TimeScale\\TaskItem\\TaskItemContainer.tsx":"66","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\ProjectForm.tsx":"67","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Header\\MenuPopover.tsx":"68","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllersContainer.tsx":"69","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Models\\ModelsContainer.tsx":"70","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\TimeScale\\TaskItem\\TaskItem.tsx":"71","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Models\\Models.tsx":"72","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\Controllers.tsx":"73","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\OldProject\\OldProjectFormContainer.tsx":"74","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\NewProject\\NewProjectForm.tsx":"75","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoActions\\ToDoActionsRouter.tsx":"76","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Code\\CodeModalContainer.tsx":"77","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerMethodsContainer.tsx":"78","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\OldProject\\OldProjectForm.tsx":"79","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\BackendForm\\BackendFormContainer.tsx":"80","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerForm.tsx":"81","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Models\\ModelForm.tsx":"82","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Models\\FieldForm.tsx":"83","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Models\\FieldListContainer.tsx":"84","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Code\\CodeModal.tsx":"85","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerMethods.tsx":"86","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\BackendForm\\BackendForm.tsx":"87","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Models\\FieldList.tsx":"88","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Code\\Model\\ModelCodeContainer.tsx":"89","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerMethodsForm\\ControllerMethodsCode.tsx":"90","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerMethodsForm\\ControllerMethodsForm.tsx":"91","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerMethodsForm\\ResponseItem.tsx":"92","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerMethodsForm\\RequestItem.tsx":"93","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Code\\Model\\ModelCode.tsx":"94","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Instanses\\InstansesForm.tsx":"95","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\Settings\\SettingsModal.tsx":"96","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeBrowserItemContainer.tsx":"97","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\RunTask.tsx\\RunTaskForm.tsx":"98","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeBrowserItem.tsx":"99","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\English\\English.tsx":"100"},{"size":406,"mtime":1613734088593,"results":"101","hashOfConfig":"102"},{"size":440,"mtime":1613296306233,"results":"103","hashOfConfig":"102"},{"size":5839,"mtime":1615928742005,"results":"104","hashOfConfig":"102"},{"size":1085,"mtime":1615318116796,"results":"105","hashOfConfig":"102"},{"size":5172,"mtime":1614159659986,"results":"106","hashOfConfig":"102"},{"size":1346,"mtime":1613464808263,"results":"107","hashOfConfig":"102"},{"size":713,"mtime":1613296306193,"results":"108","hashOfConfig":"102"},{"size":750,"mtime":1613296306198,"results":"109","hashOfConfig":"102"},{"size":586,"mtime":1614157847105,"results":"110","hashOfConfig":"102"},{"size":1377,"mtime":1613465400095,"results":"111","hashOfConfig":"102"},{"size":3067,"mtime":1614587922718,"results":"112","hashOfConfig":"102"},{"size":920,"mtime":1613979512816,"results":"113","hashOfConfig":"102"},{"size":843,"mtime":1613483985421,"results":"114","hashOfConfig":"102"},{"size":1572,"mtime":1614165416857,"results":"115","hashOfConfig":"102"},{"size":784,"mtime":1615318116786,"results":"116","hashOfConfig":"102"},{"size":1660,"mtime":1615318116782,"results":"117","hashOfConfig":"102"},{"size":2713,"mtime":1614166522727,"results":"118","hashOfConfig":"102"},{"size":7285,"mtime":1615928176795,"results":"119","hashOfConfig":"102"},{"size":1948,"mtime":1615928176792,"results":"120","hashOfConfig":"102"},{"size":2921,"mtime":1614159673676,"results":"121","hashOfConfig":"102"},{"size":5502,"mtime":1613735882608,"results":"122","hashOfConfig":"102"},{"size":2394,"mtime":1614095320873,"results":"123","hashOfConfig":"102"},{"size":278,"mtime":1613737651111,"results":"124","hashOfConfig":"102"},{"size":16691,"mtime":1614159427508,"results":"125","hashOfConfig":"102"},{"size":1345,"mtime":1614157281504,"results":"126","hashOfConfig":"102"},{"size":3155,"mtime":1615928747399,"results":"127","hashOfConfig":"102"},{"size":9309,"mtime":1614240304994,"results":"128","hashOfConfig":"102"},{"size":4374,"mtime":1614174138841,"results":"129","hashOfConfig":"102"},{"size":248,"mtime":1613560191734,"results":"130","hashOfConfig":"102"},{"size":10793,"mtime":1614253436230,"results":"131","hashOfConfig":"102"},{"size":2518,"mtime":1614160765643,"results":"132","hashOfConfig":"102"},{"size":1112,"mtime":1614159517590,"results":"133","hashOfConfig":"102"},{"size":1303,"mtime":1614157320967,"results":"134","hashOfConfig":"102"},{"size":8717,"mtime":1614174179865,"results":"135","hashOfConfig":"102"},{"size":8716,"mtime":1614166472842,"results":"136","hashOfConfig":"102"},{"size":1694,"mtime":1615318116780,"results":"137","hashOfConfig":"102"},{"size":1253,"mtime":1615318116784,"results":"138","hashOfConfig":"102"},{"size":1035,"mtime":1614157826407,"results":"139","hashOfConfig":"102"},{"size":2054,"mtime":1614240032716,"results":"140","hashOfConfig":"102"},{"size":2069,"mtime":1614680026973,"results":"141","hashOfConfig":"102"},{"size":773,"mtime":1614096505551,"results":"142","hashOfConfig":"102"},{"size":2183,"mtime":1615928176784,"results":"143","hashOfConfig":"102"},{"size":6352,"mtime":1615799001197,"results":"144","hashOfConfig":"102"},{"size":512,"mtime":1614241282962,"results":"145","hashOfConfig":"102"},{"size":939,"mtime":1613469461211,"results":"146","hashOfConfig":"102"},{"size":1508,"mtime":1613296306199,"results":"147","hashOfConfig":"102"},{"size":944,"mtime":1613300106274,"results":"148","hashOfConfig":"102"},{"size":2784,"mtime":1614151925478,"results":"149","hashOfConfig":"102"},{"size":849,"mtime":1613296306215,"results":"150","hashOfConfig":"102"},{"size":2119,"mtime":1614087398468,"results":"151","hashOfConfig":"102"},{"size":1445,"mtime":1615318116697,"results":"152","hashOfConfig":"102"},{"size":3131,"mtime":1614156946968,"results":"153","hashOfConfig":"102"},{"size":4260,"mtime":1614159640052,"results":"154","hashOfConfig":"102"},{"size":4632,"mtime":1614161873973,"results":"155","hashOfConfig":"102"},{"size":5447,"mtime":1614253475354,"results":"156","hashOfConfig":"102"},{"size":4854,"mtime":1614174336151,"results":"157","hashOfConfig":"102"},{"size":3927,"mtime":1614674389550,"results":"158","hashOfConfig":"102"},{"size":1954,"mtime":1614159704250,"results":"159","hashOfConfig":"102"},{"size":1056,"mtime":1614174358296,"results":"160","hashOfConfig":"102"},{"size":1068,"mtime":1614093611228,"results":"161","hashOfConfig":"102"},{"size":2380,"mtime":1614167912756,"results":"162","hashOfConfig":"102"},{"size":8790,"mtime":1615318116799,"results":"163","hashOfConfig":"102"},{"size":4428,"mtime":1613988783784,"results":"164","hashOfConfig":"102"},{"size":2657,"mtime":1615318116687,"results":"165","hashOfConfig":"102"},{"size":318,"mtime":1613296306237,"results":"166","hashOfConfig":"102"},{"size":919,"mtime":1614174416188,"results":"167","hashOfConfig":"102"},{"size":1610,"mtime":1614598275119,"results":"168","hashOfConfig":"102"},{"size":1438,"mtime":1614154594808,"results":"169","hashOfConfig":"102"},{"size":1289,"mtime":1615494433096,"results":"170","hashOfConfig":"102"},{"size":1168,"mtime":1615318116777,"results":"171","hashOfConfig":"102"},{"size":4041,"mtime":1614176766216,"results":"172","hashOfConfig":"102"},{"size":13959,"mtime":1615318116776,"results":"173","hashOfConfig":"102"},{"size":7024,"mtime":1615799001174,"results":"174","hashOfConfig":"102"},{"size":1353,"mtime":1614598083352,"results":"175","hashOfConfig":"102"},{"size":5751,"mtime":1614593636154,"results":"176","hashOfConfig":"102"},{"size":3151,"mtime":1614181149779,"results":"177","hashOfConfig":"102"},{"size":1039,"mtime":1615318116671,"results":"178","hashOfConfig":"102"},{"size":1475,"mtime":1615928176765,"results":"179","hashOfConfig":"102"},{"size":1554,"mtime":1614716861099,"results":"180","hashOfConfig":"102"},{"size":1332,"mtime":1614596720301,"results":"181","hashOfConfig":"102"},{"size":1761,"mtime":1615318116719,"results":"182","hashOfConfig":"102"},{"size":1642,"mtime":1615318116773,"results":"183","hashOfConfig":"102"},{"size":4713,"mtime":1615318116737,"results":"184","hashOfConfig":"102"},{"size":1031,"mtime":1615318116771,"results":"185","hashOfConfig":"102"},{"size":869,"mtime":1615318116669,"results":"186","hashOfConfig":"102"},{"size":6139,"mtime":1615928176759,"results":"187","hashOfConfig":"102"},{"size":2398,"mtime":1614597779286,"results":"188","hashOfConfig":"102"},{"size":2756,"mtime":1615318116741,"results":"189","hashOfConfig":"102"},{"size":1085,"mtime":1615318116681,"results":"190","hashOfConfig":"102"},{"size":2700,"mtime":1615928176771,"results":"191","hashOfConfig":"102"},{"size":9811,"mtime":1615928176776,"results":"192","hashOfConfig":"102"},{"size":8509,"mtime":1615928176780,"results":"193","hashOfConfig":"102"},{"size":2940,"mtime":1615799001147,"results":"194","hashOfConfig":"102"},{"size":6648,"mtime":1615799001130,"results":"195","hashOfConfig":"102"},{"size":2493,"mtime":1615318116735,"results":"196","hashOfConfig":"102"},{"size":4879,"mtime":1614159491147,"results":"197","hashOfConfig":"102"},{"size":1241,"mtime":1613475104471,"results":"198","hashOfConfig":"102"},{"size":1451,"mtime":1614173678349,"results":"199","hashOfConfig":"102"},{"size":10535,"mtime":1614245334875,"results":"200","hashOfConfig":"102"},{"size":677,"mtime":1615930697503,"results":"201","hashOfConfig":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h84doe",{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"238"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"374","messages":"375","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"238"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"238"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"390","usedDeprecatedRules":"238"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\OpenServer\\domains\\DeployProject\\src\\index.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\reportWebVitals.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\App.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\redux\\store.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\redux\\authReducer.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\redux\\appReducer.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Header\\HeaderContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Login\\LoginContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Orders\\OrdersContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TasksTreeContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\UsersContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Register\\RegisterContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\CurrentUser\\CurrentUserContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\ProjectsContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\CurrentProjectContainer.tsx",["407","408"],"C:\\OpenServer\\domains\\DeployProject\\src\\redux\\usersReducer.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\redux\\projectReducer.ts",[],["409","410"],"C:\\OpenServer\\domains\\DeployProject\\src\\redux\\codeReducer.ts",["411","412","413","414","415","416","417","418","419"],"import { \r\n    // BaseThunkType, \r\n    InferActionsTypes \r\n} from \"./store\"\r\nimport { Dispatch } from \"react\"\r\n\r\nexport type codeTypeList = 'model'| 'controller'\r\n\r\nexport type InitialStateType = {\r\n    isModalVisible: boolean,\r\n    codeRowsArray: Array<any>,\r\n    codeType: codeTypeList,\r\n    codeTargetName: string,\r\n    codeData?: any // данные для формирования\r\n}\r\n\r\nlet initialState:InitialStateType = {\r\n    isModalVisible: false,\r\n    codeRowsArray: [],\r\n    codeType: 'model',\r\n    codeTargetName: ''\r\n}\r\n\r\nconst codeReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/CODE/SET_SHOW_CODE_MODAL':\r\n            console.log('SN/CODE/SET_SHOW_CODE_MODAL')\r\n            return {...state, isModalVisible: action.isShow, codeRowsArray: action.codeRowsArray, }\r\n            // return {...state, isModalVisible: action.isShow, codeRowsArray: action.codeRowsArray, codeTargetName: action.codeTargetName}\r\n    \r\n        case 'SN/CODE/SET_CODE_TARGET':\r\n            console.log(action.codeTargetName)\r\n            console.log(action.codeData)\r\n            return {...state, codeTargetName: action.codeTargetName, codeData: action.codeData}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setShowCodeModal: (\r\n        isShow: boolean, \r\n        codeType: codeTypeList, \r\n        codeRowsArray: Array<any>, \r\n        codeTargetName: string,\r\n        codeData: Array<any>\r\n        ) => ({ type: 'SN/CODE/SET_SHOW_CODE_MODAL', isShow, codeType, codeRowsArray, codeTargetName, codeData} as const),\r\n    setCodeTarget: (codeTargetName: string, codeData: any) => ({ type: 'SN/CODE/SET_CODE_TARGET', codeTargetName, codeData} as const),\r\n}\r\n\r\nexport default codeReducer\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n// type ThunkType = BaseThunkType<ActionsTypes>\r\nexport type DispatchType = Dispatch<ActionsTypes>","C:\\OpenServer\\domains\\DeployProject\\src\\redux\\TaskListReducer.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\redux\\taskReducer.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\api\\authAPI.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\redux\\usersSelector.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoMobile.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Login\\Login.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Header\\Header.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TasksTreeBrowser.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoBrowser.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Orders\\Orders.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TasksTreeMobile.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\Users.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\UsersMobile.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Register\\Register.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\CurrentUser\\CurrentUser.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\CurrentUser\\CurrentUserMobile.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\CurrentProject.tsx",["420","421","422","423","424"],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\Projects.tsx",["425","426","427","428","429"],"C:\\OpenServer\\domains\\DeployProject\\src\\api\\usersAPI.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\api\\taskListAPI.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\api\\taskApi.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\api\\api.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\api\\ControllerMethodsAPI.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\api\\projectAPI.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskListActions\\TaskListActions.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\utils\\Date\\NewDeteByString.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Login\\LoginForm.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Header\\MenuContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Register\\RegisterForm.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\Settings\\SettingsModalContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoForm\\ToDoForm.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\BackendContainer.tsx",["430","431"],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeaderMobile.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Users\\CurrentUser\\UserDataForm.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeader.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeMobileItem.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\TimeScale\\TimeScale.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\NewTaskTreeForm.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\utils\\Formik\\ValidateFields.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\TimeScale\\TimeScaleContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeaderContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Header\\MenuBrowser.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\utils\\Formik\\CreateAntField.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Header\\MenuMobile.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Backend.tsx",["432"],"C:\\OpenServer\\domains\\DeployProject\\src\\utils\\array-helpers.ts",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\TimeScale\\TaskItem\\TaskItemContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\ProjectForm.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Header\\MenuPopover.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllersContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Models\\ModelsContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\TimeScale\\TaskItem\\TaskItem.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Models\\Models.tsx",["433","434","435","436","437","438"],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\Controllers.tsx",["439","440","441","442"],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\OldProject\\OldProjectFormContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\NewProject\\NewProjectForm.tsx",["443","444","445"],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\ToDoActions\\ToDoActionsRouter.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Code\\CodeModalContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerMethodsContainer.tsx",["446","447"],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\OldProject\\OldProjectForm.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\BackendForm\\BackendFormContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerForm.tsx",["448","449","450","451","452","453"],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Models\\ModelForm.tsx",["454","455","456","457","458"],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Models\\FieldForm.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Models\\FieldListContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Code\\CodeModal.tsx",["459","460"],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerMethods.tsx",["461","462","463","464"],"import { Button, List, Modal } from 'antd'\r\nimport { Formik } from 'formik'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { ControllerMethodsType, rest_typeType } from '../../../../../../api/ControllerMethodsAPI'\r\nimport { ModelsType } from '../../../../../../api/projectAPI'\r\nimport { ControllerMethodsPropsType } from './ControllerMethodsContainer'\r\nimport ControllerMethodsCode from './ControllerMethodsForm/ControllerMethodsCode'\r\nimport ControllerMethodsForm, { RequestType } from './ControllerMethodsForm/ControllerMethodsForm'\r\n\r\nexport type initialValuesType = {\r\n    modelsList: Array<ModelsType>,\r\n    controllerMethodsList: Array<ControllerMethodsType>,\r\n    body_actions?: string\r\n    name: string,\r\n    rest_type?: rest_typeType,\r\n    request?: Array<RequestType>,\r\n    response?: any,\r\n    id?: number\r\n}\r\n\r\nconst ControllerMethods: React.FC<ControllerMethodsPropsType> = (props) => {\r\n\r\n    let emptyInitialValues: initialValuesType = {\r\n        modelsList: props.modelsList,\r\n        name: '',\r\n        controllerMethodsList: props.controllerMethodsList\r\n    }\r\n\r\n    const [methodData, setMethodData] = useState<ControllerMethodsType | null>(null)\r\n    const [initialValues, setinitialValues] = useState<initialValuesType>(emptyInitialValues)\r\n    const [modalTitle, setModalTitle] = useState<string>('Controller Method form')\r\n\r\n    useEffect(() => {\r\n        if (props.controllerMethodsList.length === 0) {\r\n            console.log('getControllerMethodsList in useEffect')\r\n            props.getControllerMethodsList()\r\n        }\r\n    }, [])\r\n\r\n    // console.log('props.controllerMethodsList', props.controllerMethodsList)\r\n        \r\n    useEffect(() => {\r\n        setinitialValues({\r\n            ...initialValues,\r\n            controllerMethodsList: props.controllerMethodsList\r\n        })\r\n        // emptyInitialValues.controllerMethodsList = props.controllerMethodsList\r\n    }, [props.controllerMethodsList])\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n    const showMethod = (id: number) => {\r\n        const target = props.controllerMethodsList.filter( (item) => item.id === id)[0]\r\n        console.log('target of method', target)\r\n        setModalTitle('Edit Controller Method '+ target.name)\r\n        setMethodData({\r\n            body_actions: target.body_actions,\r\n            controller_id: target.controller_id,\r\n            id: id,\r\n            isMiddleware: false,\r\n            name: target.name,\r\n            request: target.request,\r\n            response: target.response,\r\n            rest_type: target.rest_type\r\n        })\r\n        setIsModalVisible(true)\r\n        setinitialValues({\r\n            ...initialValues,\r\n            name: target.name,\r\n            request: target.request ? JSON.parse(target.request) : [],\r\n            response: target.response ? JSON.parse(target.response) : undefined,\r\n            body_actions: target.body_actions,\r\n            rest_type: target.rest_type,\r\n            id: target.id\r\n        })\r\n    }\r\n\r\n    const addMethod = () => {\r\n        setinitialValues(emptyInitialValues)\r\n        setModalTitle('Controller Method form')\r\n        setIsModalVisible(true)\r\n    }\r\n\r\n    const onOk = () => {\r\n        console.log('onOk')\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const onHandleSubmit = (values: initialValuesType) => {\r\n        console.log(values)\r\n\r\n        const controllerMethods: ControllerMethodsType = {\r\n            body_actions: values.body_actions? values.body_actions : '',\r\n            controller_id: 123,\r\n            id: values.id ? values.id : 0,\r\n            isMiddleware: false,\r\n            name: values.name,\r\n            request: JSON.stringify(values.request),\r\n            response: JSON.stringify(values.response),\r\n            rest_type: values.rest_type ? values.rest_type : null\r\n        }\r\n\r\n        console.log(controllerMethods)\r\n\r\n        setMethodData(controllerMethods)\r\n\r\n        if(values.id) {\r\n            console.log('UPDATE: ', controllerMethods)\r\n            props.updateControllerMethodsList(controllerMethods, values.id)\r\n        } else {\r\n            console.log('CREATE: ', controllerMethods)\r\n        }\r\n    }\r\n\r\n    console.log('initialValues: ', initialValues)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"w-100 d-flex flex-row-reverse\">\r\n                <Button type=\"primary\" onClick={addMethod}>Add Method</Button>\r\n            </div>\r\n\r\n            {props.controllerMethodsList.length !== 0 ?\r\n                <>\r\n                    <List\r\n                        className=\"mt-2\"\r\n                        header={<div>Controller Methods List:</div>}\r\n                        // footer={<div>Footer</div>}\r\n                        bordered\r\n                        dataSource={props.controllerMethodsList}\r\n                        renderItem={item => (\r\n                            <List.Item\r\n                                actions={[<a key=\"list-loadmore-edit\" onClick={()=>{showMethod(item.id)}}>edit</a>, <a key=\"list-loadmore-more\">code</a>]}\r\n                            >\r\n                                {/* {item.name} */}\r\n                                <div className=\"row w-100\">\r\n                                    <div className=\"col-6\">{item.name}</div>\r\n                                    <div className=\"col-3\">{item.rest_type}</div>\r\n                                </div>\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </>\r\n                :\r\n                null\r\n            }\r\n\r\n            <Modal title={modalTitle} visible={isModalVisible} onOk={onOk} onCancel={() => { setIsModalVisible(false) }} width={1000}>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    onSubmit={onHandleSubmit}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {ControllerMethodsForm}\r\n                </Formik>\r\n\r\n                <ControllerMethodsCode methodData={methodData} controllerData={props.controllerData}/>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ControllerMethods","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeForm\\Project\\BackendForm\\BackendForm.tsx",["465","466","467"],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Models\\FieldList.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Code\\Model\\ModelCodeContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerMethodsForm\\ControllerMethodsCode.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerMethodsForm\\ControllerMethodsForm.tsx",["468","469","470","471","472","473","474","475","476"],"import { Form, Field, FormikProps } from 'formik'\r\nimport React, { ReactNode, useState, useEffect } from 'react'\r\nimport { AntCheckbox, AntInput, AntSelect } from '../../../../../../../utils/Formik/CreateAntField'\r\nimport { validateRequired } from '../../../../../../../utils/Formik/ValidateFields'\r\nimport {SelectOptionType} from '../../../../../../../Types/types'\r\nimport { Button, Checkbox, Input, TreeSelect } from 'antd'\r\nimport { ModelsType } from '../../../../../../../api/projectAPI'\r\nimport RequestItem from './RequestItem'\r\nimport ResponseItem from './ResponseItem'\r\nimport TextArea from 'antd/lib/input/TextArea'\r\n\r\nexport type RequestType = {\r\n    label: string,\r\n    type: string,\r\n    name: string,\r\n    id: number\r\n}\r\n\r\nexport type ResponreItemsType = {\r\n    key: string,\r\n    variable: string,\r\n}\r\n\r\nexport type ResponseType = {\r\n    type: 'Response' | 'method' | '',\r\n    methodId?: number,\r\n    responreitems?: Array<ResponreItemsType>\r\n}\r\n\r\nconst ControllerMethodsForm: ((props: FormikProps<{}>) => ReactNode) = (props) => {\r\n    // @ts-ignore\r\n    const [request, setRequest] = useState<Array<RequestType>>(props.initialValues.request !== undefined ? props.initialValues.request : [])\r\n    // @ts-ignore\r\n    const [isRequest, setIsRequest] = useState(props.initialValues.request && props.initialValues.request.length !== 0 ? true : false)\r\n\r\n    // @ts-ignore\r\n    const [response, setResponse] = useState<ResponseType | undefined>(props.initialValues.response)\r\n    // @ts-ignore\r\n    const [isResponse, setIsResponse] = useState(props.initialValues.response? true : false)\r\n    // console.log(isResponse)\r\n\r\n    // @ts-ignore\r\n    const [body_actions, setBody_actions] = useState<string>(props.initialValues.body_actions)\r\n    // @ts-ignore\r\n    const [isBody_actions, setIsBody_actions] = useState(props.initialValues.body_actions ? true : false)\r\n    \r\n    const [value, setValue] = useState(undefined)\r\n\r\n    useEffect( () => {\r\n        // @ts-ignore\r\n        // console.log('!!!!!!!!!!!!useEffect ControllerMethodsForm', props.initialValues.response.responseItems)\r\n        // @ts-ignore\r\n        setRequest(props.initialValues.request !== undefined ? props.initialValues.request : [])\r\n        // @ts-ignore\r\n        setIsRequest(props.initialValues.request && props.initialValues.request.length !== 0 ? true : false)\r\n        // @ts-ignore\r\n        setResponse(props.initialValues.response ? props.initialValues.response : undefined)\r\n        // @ts-ignore\r\n        setBody_actions(props.initialValues.body_actions ? props.initialValues.body_actions : '')\r\n        // @ts-ignore\r\n        setIsBody_actions(props.initialValues.body_actions ? true : false)\r\n    },[props.initialValues])\r\n\r\n    const onRequest = (val: any) => {\r\n        console.log(val.target.checked)\r\n        console.log(request)\r\n\r\n        if (val.target.checked) {\r\n            if (request!==undefined && request.length === 0) {\r\n\r\n            }\r\n        }\r\n\r\n        if (request!==undefined && request.length === 0) {\r\n            console.log('onAddRequest')\r\n            onAddRequest()\r\n        } else {\r\n            console.log('setRequest')\r\n            setRequest([])\r\n        }\r\n        setIsRequest(!isRequest)\r\n    }\r\n\r\n    const onAddRequest = () => {\r\n        // console.log(request)\r\n        let newRequest = [...request]\r\n\r\n        newRequest.push({\r\n            label: 'param '+ (request.length+1),\r\n            type: '',\r\n            name: '',\r\n            id: request.length\r\n        })\r\n        setRequest(newRequest)\r\n        props.setValues({...props.values, request: newRequest})\r\n    }\r\n\r\n    const onDeleteRequest = () => {\r\n        let newRequest = [...request]\r\n        newRequest.pop()\r\n        setRequest(newRequest)\r\n        if (newRequest.length === 0) {\r\n            setIsRequest(false)\r\n        }\r\n        props.setValues({...props.values, request: newRequest})\r\n    }\r\n\r\n    const onResponse = () => {\r\n        setIsResponse(!isResponse)\r\n        console.log('response: ', response)\r\n        if (!response) {\r\n            setResponse({\r\n                type: ''\r\n            })\r\n        } else {\r\n            setResponse(undefined)\r\n        }\r\n    }\r\n\r\n    const onBodyActions = () => {\r\n        setIsBody_actions(!isBody_actions)\r\n    }\r\n\r\n    const onAddResponse = () => {\r\n        \r\n    }\r\n\r\n    const onRowChange = (id: number, type: string, name: string) => {\r\n        let requestCopy = [...request]\r\n\r\n        for (let index = 0; index < request.length; index++) {\r\n            const element = request[index];\r\n            if (element.id === id) {\r\n                requestCopy[index] = {...element, name: name, type: type}\r\n            }\r\n        }\r\n        setRequest(requestCopy)\r\n        props.setValues({...props.values, request: requestCopy})\r\n    }\r\n\r\n    const setResponseValues = (responseValues: ResponseType) => {\r\n        // console.log('setResponseValues:', responseValues)\r\n        props.setValues({...props.values, response: responseValues})\r\n    }\r\n\r\n    console.log('props.initialValues: ',props.initialValues)\r\n    // console.log(response)\r\n\r\n    // if (response !== undefined && response.type !== undefined) {\r\n    //     console.log('show response')\r\n    // }\r\n\r\n    const onKeyDown = (v: any) => {\r\n        if (v.keyCode === 9) {\r\n            v.preventDefault()\r\n\r\n            const before = body_actions.substr(0, v.target.selectionEnd)\r\n            const after = body_actions.substr(v.target.selectionEnd)\r\n\r\n            setBody_actions(before+'    '+after)\r\n            props.setValues({...props.values, body_actions: v.target.value})\r\n\r\n            const newStart = v.target.selectionStart+4\r\n            const newEnd = v.target.selectionEnd+4\r\n\r\n            setTimeout( ()=> {\r\n                v.target.selectionStart = newStart\r\n                v.target.selectionEnd = newEnd\r\n            }, 0)\r\n            \r\n        }\r\n    }\r\n\r\n    const onBodyChange = (v: any) => {\r\n        setBody_actions(v.target.value)\r\n        props.setValues({...props.values, body_actions: v.target.value})\r\n    }\r\n\r\n    // console.log(response)\r\n\r\n    return (\r\n        <Form\r\n            className=\"form-container\"\r\n            onSubmit={props.handleSubmit}\r\n        >\r\n            <Field\r\n                component={AntInput}\r\n                name=\"name\"\r\n                type=\"text\"\r\n                label=\"Method name\"\r\n                validate={validateRequired}\r\n                submitCount={props.submitCount}\r\n                hasFeedback\r\n            />\r\n            <Field\r\n                component={AntSelect}\r\n                name=\"rest_type\"\r\n                type=\"select\"\r\n                label=\"REST Type\"\r\n                selectOptions={RestTypeOtions}\r\n            /> \r\n\r\n            <div className=\"ant-row ant-form-item \">\r\n                <div className=\"ant-col ant-form-item-label pr-2\">Request:</div>\r\n                <div className=\"ant-col ant-form-item-control\">\r\n                    <Checkbox onChange={onRequest} checked={isRequest}></Checkbox>\r\n                </div>\r\n            </div>\r\n\r\n            {request && request.length>0 ? \r\n                request.map( (item: RequestType) => {\r\n                    return <RequestItem key={item.id} item={item} initialValues={props.initialValues} onRowChange={onRowChange}/>\r\n                })\r\n            :\r\n                null\r\n            }\r\n            {request && request.length>=1 ? \r\n            <div className=\"my-2\">\r\n                <Button className=\"mr-3\" type=\"primary\" size=\"small\" onClick={onAddRequest}>Add</Button> \r\n                <Button className=\"mr-3\" type=\"primary\" size=\"small\" onClick={onDeleteRequest}>del</Button>\r\n            </div>\r\n            : null}\r\n\r\n            <div className=\"ant-row ant-form-item\">\r\n                <div className=\"ant-col ant-form-item-label pr-2\">body_actions:</div>\r\n                <div className=\"ant-col ant-form-item-control\">\r\n                    <Checkbox onChange={onBodyActions} checked={isBody_actions}></Checkbox>\r\n                </div>\r\n            </div>\r\n\r\n            {isBody_actions ? \r\n                <TextArea \r\n                    onKeyDown={onKeyDown} \r\n                    // onBlur={onBlur} \r\n                    rows={4} \r\n                    value={body_actions}\r\n                    onChange={onBodyChange}\r\n                />\r\n            : null }\r\n\r\n\r\n\r\n\r\n            <div className=\"ant-row ant-form-item \">\r\n                <div className=\"ant-col ant-form-item-label pr-2\">Response:</div>\r\n                <div className=\"ant-col ant-form-item-control\">\r\n                    <Checkbox onChange={onResponse} checked={isResponse}></Checkbox>\r\n                </div>\r\n            </div>\r\n\r\n            {response !== undefined && response.type !== undefined ? \r\n                <ResponseItem \r\n                    responseInit={response} \r\n                    initialValues={props.initialValues}\r\n                    setResponseValues={setResponseValues}\r\n                />\r\n            :\r\n            null\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            <Field\r\n                component={AntCheckbox}\r\n                name=\"isMiddleware\"\r\n                type=\"checkbox\"\r\n                label=\"isMiddleware\"\r\n                submitCount={props.submitCount}\r\n            />\r\n\r\n            <div className=\"submit-container\">\r\n                <button className=\"ant-btn ant-btn-primary\" type=\"submit\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default ControllerMethodsForm\r\n\r\nconst RestTypeOtions = [\r\n    {\r\n        name: 'GET',\r\n        value: 'get'\r\n    },\r\n    {\r\n        name: 'POST',\r\n        value: 'post'\r\n    },\r\n    {\r\n        name: 'PUT',\r\n        value: 'put'\r\n    },\r\n    {\r\n        name: 'DELETE',\r\n        value: 'delete'\r\n    },\r\n]","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerMethodsForm\\ResponseItem.tsx",["477","478","479"],"import { Button, Input, TreeSelect } from 'antd'\r\nimport { TreeNode } from 'rc-tree-select'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { ControllerMethodsType } from '../../../../../../../api/ControllerMethodsAPI'\r\nimport { ResponreItemsType } from './ControllerMethodsForm'\r\n\r\ntype ValueType = {\r\n    type: 'Response' | 'method' | '',\r\n    methodId?: number,\r\n    responseItems?: Array<ResponreItemsType>\r\n}\r\n\r\ntype ResponseItemPropsType = {\r\n    responseInit: ValueType\r\n    initialValues: any,\r\n    setResponseValues: (responseValues: ValueType)=>void\r\n    // methodList !!!!!\r\n}\r\n\r\nconst ResponseItem: React.FC<ResponseItemPropsType> = (props) => {\r\n    const [value, setValue] = useState<ValueType>(props.responseInit)\r\n    // console.log(props)\r\n\r\n    useEffect( () => {\r\n        setValue(props.responseInit)\r\n    },[props.responseInit])\r\n\r\n    const onResponseTypeChange = (typeValue: 'Response'|'method'|'', labelList: React.ReactNode[], extra: any) => {\r\n        let newResponse: Array<ResponreItemsType> = []\r\n        let methodId: number = 0\r\n        let type: 'Response'|'method'|'' = ''\r\n\r\n        if(typeValue === 'Response') {\r\n            type = typeValue\r\n            // if(value.responseItems && value.responseItems.length === 0) {\r\n                newResponse.push({\r\n                    key: '',\r\n                    variable: ''\r\n                })\r\n            // }\r\n        } else {\r\n            // console.log('GO TO METHOD!!!',typeValue)\r\n            // console.log(props)\r\n            methodId = props.initialValues.controllerMethodsList.filter( (item: any) => item.name === typeValue )[0].id\r\n            // console.log(methodId)\r\n\r\n            type = 'method'\r\n        }\r\n\r\n        setValue({...value, type: type, responseItems: newResponse, methodId: methodId})\r\n        props.setResponseValues({...value, type: type, responseItems: newResponse, methodId: methodId})\r\n\r\n        // console.log(typeValue)\r\n        // console.log(labelList)\r\n        // console.log(extra.triggerValue)\r\n    }\r\n\r\n    const onRowChange = (rowValue: string, elementNumber: number, param: 'key'|'variable') => {\r\n        // console.log(rowValue)\r\n        // console.log(elementNumber)\r\n        // console.log(param)\r\n\r\n        let responseItems: Array<ResponreItemsType> = value.responseItems ? value.responseItems : []\r\n        if (responseItems[elementNumber]) {\r\n            responseItems[elementNumber][param] = rowValue\r\n        }\r\n        setValue({\r\n            ...value,\r\n            responseItems: responseItems\r\n        })\r\n        props.setResponseValues({\r\n            ...value,\r\n            responseItems: responseItems\r\n        })\r\n    }\r\n\r\n    const addParam = () => {\r\n        let responseItems: Array<ResponreItemsType> = value.responseItems ? [... value.responseItems] : []\r\n        responseItems.push({key:'', variable:''})\r\n        setValue({...value, responseItems: responseItems })\r\n    }\r\n\r\n    const dellParam = () => {\r\n        let responseItems: Array<ResponreItemsType> = value.responseItems ? [... value.responseItems] : []\r\n        responseItems.pop()\r\n        setValue({...value, responseItems: responseItems })\r\n    }\r\n\r\n    // console.log(value)\r\n    // console.log('props: ', props)\r\n\r\n    return(\r\n        <>\r\n        <div className=\"row mt-1 mb-3\">\r\n            <div className=\"ant-col ant-form-item-label mt-2\">\r\n                Response:\r\n            </div>\r\n            <div className=\"col-4\">\r\n                <TreeSelect\r\n                    className=\" ml-2 TreeSelect_Request_Type\"\r\n                    style={{ width: '100%' }}\r\n                    showSearch\r\n                    value={value.type === 'Response' ? 'Response': \r\n                    props.initialValues.controllerMethodsList.filter((controllerMethod: ControllerMethodsType)=>controllerMethod.id === value.methodId)[0].name\r\n                    }\r\n                    dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\r\n                    placeholder=\"Reqest type\"\r\n                    allowClear\r\n                    showCheckedStrategy={'SHOW_PARENT'}\r\n                    onChange={onResponseTypeChange}\r\n\r\n                    // treeCheckable={true}\r\n                >\r\n                    <TreeNode\r\n                        // selectable={false} \r\n                        // per_id={props.item.id} \r\n                        value=\"Response\" \r\n                        title=\"Response\"\r\n                    ></TreeNode>\r\n                    <TreeNode\r\n                        selectable={false} \r\n                        // per_id={props.item.id} \r\n                        value=\"method\" \r\n                        title=\"Method\"\r\n                    >\r\n                        {\r\n                            props.initialValues.controllerMethodsList !== undefined ?\r\n                            // @ts-ignore\r\n                            props.initialValues.controllerMethodsList.filter((controllerMethod: ControllerMethodsType)=>controllerMethod.name !== props.initialValues.name)\r\n                                .map(( controllerMethod: ControllerMethodsType ) => {\r\n                                return (\r\n                                    <TreeNode \r\n                                        key={controllerMethod.name}\r\n                                        // per_id={props.item.id} \r\n                                        value={controllerMethod.name} \r\n                                        title={controllerMethod.name}\r\n                                    ></TreeNode>\r\n                                )\r\n                            })\r\n                            : null\r\n                        }\r\n                    </TreeNode>\r\n                </TreeSelect>\r\n            </div>\r\n            <div className=\"col-4\">\r\n                {value.type === 'Response' ? \r\n                    <>\r\n                        <Button className=\"ml-2\" type=\"primary\" onClick={addParam}>Add param</Button>\r\n                        <Button className=\"ml-2\" type=\"primary\" onClick={dellParam}>Del param</Button>\r\n                    </>\r\n                :null}\r\n            </div>\r\n        </div>\r\n        {value.type === 'Response' ?\r\n            <div className=\"row mt-1 mb-3\">\r\n                <ResponseRows \r\n                    responseRows={value.responseItems ? value.responseItems : []}\r\n                    onRowChange={onRowChange}\r\n                />\r\n            </div>\r\n        :\r\n        null}\r\n        {value.type === 'method' ?\r\n            <div className=\"row mt-1 mb-3\">\r\n                methodId: {value.methodId}\r\n            </div>\r\n        :\r\n        null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResponseItem\r\n\r\ntype ResponseRowsPropsType = {\r\n    responseRows: Array<ResponreItemsType>\r\n    onRowChange: (value: string, elementNumber: number, param: 'key'|'variable')=>void\r\n}\r\n\r\nconst ResponseRows: React.FC<ResponseRowsPropsType> = (props) => {\r\n    // console.log(props)\r\n\r\n    const onNameChange = (event: any) => {\r\n        props.onRowChange(event.target.value, Number(event.target.name), 'key')\r\n    }\r\n\r\n    const onVariableChange = (event: any) => {\r\n        props.onRowChange(event.target.value, Number(event.target.name), 'variable')\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {props.responseRows.map( (item, index: number)=> {\r\n                return(\r\n                // <>\r\n                <div key={index.toString()} className=\"row w-100\" >\r\n                        <div className=\"ant-col ant-form-item-label pr-2 mt-3\">\r\n                            param {index+1}:\r\n                        </div>\r\n                    <div className=\"col-4 mt-2\">\r\n                        <Input \r\n                            className=\"w-100 ml-2\" \r\n                            value={item.key} \r\n                            name={index.toString()}  \r\n                            onChange={onNameChange} \r\n                            placeholder=\"Param name\" \r\n                        />\r\n                    </div>\r\n                    <div className=\"col-4 mt-2\">\r\n                        <Input \r\n                            className=\"w-100 ml-2\" \r\n                            value={item.variable} \r\n                            name={index.toString()} \r\n                            onChange={onVariableChange} \r\n                            placeholder=\"Param variable\" \r\n                        />\r\n                    </div>\r\n                </div>\r\n                // </>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}","C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Controllers\\ControllerMethodsForm\\RequestItem.tsx",["480"],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Code\\Model\\ModelCode.tsx",["481"],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\Development\\Projects\\CurrentProject\\Backend\\Instanses\\InstansesForm.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\ToDo\\Settings\\SettingsModal.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeBrowserItemContainer.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\RunTask.tsx\\RunTaskForm.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\TasksTree\\TaskTreeBrowserItem.tsx",[],"C:\\OpenServer\\domains\\DeployProject\\src\\Components\\English\\English.tsx",[],{"ruleId":"482","severity":1,"message":"483","line":5,"column":10,"nodeType":"484","messageId":"485","endLine":5,"endColumn":22},{"ruleId":"482","severity":1,"message":"486","line":5,"column":36,"nodeType":"484","messageId":"485","endLine":5,"endColumn":43},{"ruleId":"487","replacedBy":"488"},{"ruleId":"489","replacedBy":"490"},{"ruleId":"482","severity":1,"message":"491","line":2,"column":10,"nodeType":"484","messageId":"485","endLine":2,"endColumn":20},{"ruleId":"482","severity":1,"message":"492","line":2,"column":22,"nodeType":"484","messageId":"485","endLine":2,"endColumn":32},{"ruleId":"482","severity":1,"message":"493","line":2,"column":34,"nodeType":"484","messageId":"485","endLine":2,"endColumn":45},{"ruleId":"482","severity":1,"message":"494","line":2,"column":47,"nodeType":"484","messageId":"485","endLine":2,"endColumn":56},{"ruleId":"482","severity":1,"message":"495","line":2,"column":58,"nodeType":"484","messageId":"485","endLine":2,"endColumn":83},{"ruleId":"482","severity":1,"message":"496","line":2,"column":85,"nodeType":"484","messageId":"485","endLine":2,"endColumn":95},{"ruleId":"482","severity":1,"message":"497","line":2,"column":97,"nodeType":"484","messageId":"485","endLine":2,"endColumn":111},{"ruleId":"482","severity":1,"message":"498","line":2,"column":113,"nodeType":"484","messageId":"485","endLine":2,"endColumn":143},{"ruleId":"482","severity":1,"message":"499","line":53,"column":6,"nodeType":"484","messageId":"485","endLine":53,"endColumn":15},{"ruleId":"482","severity":1,"message":"500","line":1,"column":26,"nodeType":"484","messageId":"485","endLine":1,"endColumn":30},{"ruleId":"482","severity":1,"message":"501","line":1,"column":32,"nodeType":"484","messageId":"485","endLine":1,"endColumn":42},{"ruleId":"482","severity":1,"message":"502","line":1,"column":44,"nodeType":"484","messageId":"485","endLine":1,"endColumn":50},{"ruleId":"482","severity":1,"message":"503","line":1,"column":52,"nodeType":"484","messageId":"485","endLine":1,"endColumn":58},{"ruleId":"504","severity":1,"message":"505","line":17,"column":8,"nodeType":"506","endLine":17,"endColumn":32,"suggestions":"507"},{"ruleId":"482","severity":1,"message":"508","line":1,"column":16,"nodeType":"484","messageId":"485","endLine":1,"endColumn":26},{"ruleId":"504","severity":1,"message":"505","line":13,"column":8,"nodeType":"506","endLine":13,"endColumn":54,"suggestions":"509"},{"ruleId":"482","severity":1,"message":"510","line":15,"column":12,"nodeType":"484","messageId":"485","endLine":15,"endColumn":23},{"ruleId":"482","severity":1,"message":"511","line":15,"column":25,"nodeType":"484","messageId":"485","endLine":15,"endColumn":39},{"ruleId":"512","severity":1,"message":"513","line":32,"column":35,"nodeType":"514","endLine":32,"endColumn":63},{"ruleId":"482","severity":1,"message":"515","line":4,"column":10,"nodeType":"484","messageId":"485","endLine":4,"endColumn":18},{"ruleId":"482","severity":1,"message":"516","line":7,"column":10,"nodeType":"484","messageId":"485","endLine":7,"endColumn":18},{"ruleId":"504","severity":1,"message":"505","line":15,"column":8,"nodeType":"506","endLine":15,"endColumn":10,"suggestions":"517"},{"ruleId":"482","severity":1,"message":"518","line":1,"column":28,"nodeType":"484","messageId":"485","endLine":1,"endColumn":33},{"ruleId":"482","severity":1,"message":"519","line":13,"column":10,"nodeType":"484","messageId":"485","endLine":13,"endColumn":19},{"ruleId":"504","severity":1,"message":"505","line":20,"column":8,"nodeType":"506","endLine":20,"endColumn":10,"suggestions":"520"},{"ruleId":"482","severity":1,"message":"521","line":23,"column":12,"nodeType":"484","messageId":"485","endLine":23,"endColumn":25},{"ruleId":"482","severity":1,"message":"522","line":23,"column":27,"nodeType":"484","messageId":"485","endLine":23,"endColumn":43},{"ruleId":"482","severity":1,"message":"523","line":130,"column":13,"nodeType":"484","messageId":"485","endLine":130,"endColumn":26},{"ruleId":"482","severity":1,"message":"524","line":10,"column":10,"nodeType":"484","messageId":"485","endLine":10,"endColumn":23},{"ruleId":"482","severity":1,"message":"525","line":11,"column":8,"nodeType":"484","messageId":"485","endLine":11,"endColumn":12},{"ruleId":"504","severity":1,"message":"505","line":25,"column":8,"nodeType":"506","endLine":25,"endColumn":10,"suggestions":"526"},{"ruleId":"482","severity":1,"message":"527","line":33,"column":15,"nodeType":"484","messageId":"485","endLine":33,"endColumn":32},{"ruleId":"482","severity":1,"message":"528","line":3,"column":27,"nodeType":"484","messageId":"485","endLine":3,"endColumn":36},{"ruleId":"482","severity":1,"message":"529","line":4,"column":33,"nodeType":"484","messageId":"485","endLine":4,"endColumn":42},{"ruleId":"482","severity":1,"message":"530","line":33,"column":11,"nodeType":"484","messageId":"485","endLine":33,"endColumn":29},{"ruleId":"482","severity":1,"message":"531","line":4,"column":10,"nodeType":"484","messageId":"485","endLine":4,"endColumn":28},{"ruleId":"482","severity":1,"message":"532","line":4,"column":30,"nodeType":"484","messageId":"485","endLine":4,"endColumn":46},{"ruleId":"482","severity":1,"message":"533","line":2,"column":28,"nodeType":"484","messageId":"485","endLine":2,"endColumn":36},{"ruleId":"482","severity":1,"message":"528","line":2,"column":38,"nodeType":"484","messageId":"485","endLine":2,"endColumn":47},{"ruleId":"482","severity":1,"message":"534","line":3,"column":10,"nodeType":"484","messageId":"485","endLine":3,"endColumn":21},{"ruleId":"482","severity":1,"message":"529","line":3,"column":33,"nodeType":"484","messageId":"485","endLine":3,"endColumn":42},{"ruleId":"482","severity":1,"message":"535","line":5,"column":9,"nodeType":"484","messageId":"485","endLine":5,"endColumn":25},{"ruleId":"482","severity":1,"message":"527","line":49,"column":7,"nodeType":"484","messageId":"485","endLine":49,"endColumn":24},{"ruleId":"482","severity":1,"message":"533","line":2,"column":28,"nodeType":"484","messageId":"485","endLine":2,"endColumn":36},{"ruleId":"482","severity":1,"message":"528","line":2,"column":38,"nodeType":"484","messageId":"485","endLine":2,"endColumn":47},{"ruleId":"482","severity":1,"message":"534","line":3,"column":10,"nodeType":"484","messageId":"485","endLine":3,"endColumn":21},{"ruleId":"482","severity":1,"message":"529","line":3,"column":33,"nodeType":"484","messageId":"485","endLine":3,"endColumn":42},{"ruleId":"482","severity":1,"message":"535","line":5,"column":9,"nodeType":"484","messageId":"485","endLine":5,"endColumn":25},{"ruleId":"482","severity":1,"message":"533","line":2,"column":16,"nodeType":"484","messageId":"485","endLine":2,"endColumn":24},{"ruleId":"482","severity":1,"message":"528","line":2,"column":26,"nodeType":"484","messageId":"485","endLine":2,"endColumn":35},{"ruleId":"504","severity":1,"message":"505","line":38,"column":8,"nodeType":"506","endLine":38,"endColumn":10,"suggestions":"536"},{"ruleId":"504","severity":1,"message":"537","line":48,"column":8,"nodeType":"506","endLine":48,"endColumn":37,"suggestions":"538"},{"ruleId":"512","severity":1,"message":"513","line":128,"column":43,"nodeType":"514","endLine":128,"endColumn":107},{"ruleId":"512","severity":1,"message":"513","line":128,"column":117,"nodeType":"514","endLine":128,"endColumn":145},{"ruleId":"504","severity":1,"message":"505","line":18,"column":8,"nodeType":"506","endLine":18,"endColumn":55,"suggestions":"539"},{"ruleId":"482","severity":1,"message":"540","line":30,"column":12,"nodeType":"484","messageId":"485","endLine":30,"endColumn":24},{"ruleId":"482","severity":1,"message":"541","line":33,"column":11,"nodeType":"484","messageId":"485","endLine":33,"endColumn":29},{"ruleId":"482","severity":1,"message":"535","line":5,"column":9,"nodeType":"484","messageId":"485","endLine":5,"endColumn":25},{"ruleId":"482","severity":1,"message":"542","line":6,"column":28,"nodeType":"484","messageId":"485","endLine":6,"endColumn":33},{"ruleId":"482","severity":1,"message":"543","line":6,"column":35,"nodeType":"484","messageId":"485","endLine":6,"endColumn":45},{"ruleId":"482","severity":1,"message":"496","line":7,"column":10,"nodeType":"484","messageId":"485","endLine":7,"endColumn":20},{"ruleId":"482","severity":1,"message":"544","line":39,"column":12,"nodeType":"484","messageId":"485","endLine":39,"endColumn":24},{"ruleId":"482","severity":1,"message":"545","line":39,"column":26,"nodeType":"484","messageId":"485","endLine":39,"endColumn":41},{"ruleId":"482","severity":1,"message":"546","line":42,"column":12,"nodeType":"484","messageId":"485","endLine":42,"endColumn":17},{"ruleId":"482","severity":1,"message":"547","line":42,"column":19,"nodeType":"484","messageId":"485","endLine":42,"endColumn":27},{"ruleId":"482","severity":1,"message":"548","line":111,"column":11,"nodeType":"484","messageId":"485","endLine":111,"endColumn":24},{"ruleId":"482","severity":1,"message":"549","line":24,"column":13,"nodeType":"484","messageId":"485","endLine":24,"endColumn":21},{"ruleId":"550","severity":1,"message":"551","line":65,"column":81,"nodeType":"552","messageId":"553","endLine":65,"endColumn":82,"fix":"554"},{"ruleId":"550","severity":1,"message":"551","line":71,"column":81,"nodeType":"552","messageId":"553","endLine":71,"endColumn":82,"fix":"555"},{"ruleId":"504","severity":1,"message":"556","line":17,"column":7,"nodeType":"506","endLine":17,"endColumn":28,"suggestions":"557"},{"ruleId":"482","severity":1,"message":"558","line":108,"column":6,"nodeType":"484","messageId":"485","endLine":108,"endColumn":18},"@typescript-eslint/no-unused-vars","'getUsersList' is defined but never used.","Identifier","unusedVar","'actions' is defined but never used.","no-native-reassign",["559"],"no-negated-in-lhs",["560"],"'projectAPI' is defined but never used.","'backendAPI' is defined but never used.","'BackendType' is defined but never used.","'modelsAPI' is defined but never used.","'getModelsListResponseType' is defined but never used.","'ModelsType' is defined but never used.","'controllersAPI' is defined but never used.","'getControllersListResponseType' is defined but never used.","'ThunkType' is defined but never used.","'List' is defined but never used.","'Pagination' is defined but never used.","'Button' is defined but never used.","'Drawer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["561"],"'Typography' is defined but never used.",["562"],"'projectList' is assigned a value but never used.","'setProjectList' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'isMobile' is defined but never used.","'UserType' is defined but never used.",["563"],"'Empty' is defined but never used.","'stringify' is defined but never used.",["564"],"'isCodeVisible' is assigned a value but never used.","'setIsCodeVisible' is assigned a value but never used.","'ismodelChange' is assigned a value but never used.","'initialValues' is defined but never used.","'Item' is defined but never used.",["565"],"'modelsListOptions' is assigned a value but never used.","'useEffect' is defined but never used.","'AntSelect' is defined but never used.","'backendTypeOptions' is assigned a value but never used.","'getControllersList' is defined but never used.","'createController' is defined but never used.","'useState' is defined but never used.","'AntCheckbox' is defined but never used.","'SelectOptionType' is defined but never used.",["566"],"React Hook useEffect has a missing dependency: 'initialValues'. Either include it or remove the dependency array. You can also do a functional update 'setinitialValues(i => ...)' if you only need 'initialValues' in the 'setinitialValues' call.",["567"],["568"],"'isBackendNew' is assigned a value but never used.","'submitBackendIsNew' is assigned a value but never used.","'Input' is defined but never used.","'TreeSelect' is defined but never used.","'body_actions' is assigned a value but never used.","'setBody_actions' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'onAddResponse' is assigned a value but never used.","'newValue' is assigned a value but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"569","text":"570"},{"range":"571","text":"570"},"React Hook useEffect has a missing dependency: 'props.item'. Either include it or remove the dependency array. If 'setValue' needs the current value of 'props.item', you can also switch to useReducer instead of useState and read 'props.item' in the reducer.",["572"],"'FillableType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"577","fix":"579"},{"desc":"577","fix":"580"},{"desc":"577","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},[2220,2221],"",[2480,2481],{"desc":"586","fix":"587"},"Update the dependencies array to be: [props, props.isProjectsLoaded]",{"range":"588","text":"589"},"Update the dependencies array to be: [props, props.isProjectListLoaded, props.projectList]",{"range":"590","text":"591"},"Update the dependencies array to be: [props]",{"range":"592","text":"593"},{"range":"594","text":"593"},{"range":"595","text":"593"},{"range":"596","text":"593"},"Update the dependencies array to be: [initialValues, props.controllerMethodsList]",{"range":"597","text":"598"},"Update the dependencies array to be: [props, props.isBackendNew, props.isProjectListLoaded]",{"range":"599","text":"600"},"Update the dependencies array to be: [props.initialValues, props.item]",{"range":"601","text":"602"},[623,647],"[props, props.isProjectsLoaded]",[429,475],"[props, props.isProjectListLoaded, props.projectList]",[537,539],"[props]",[903,905],[1046,1048],[1545,1547],[1887,1916],"[initialValues, props.controllerMethodsList]",[643,690],"[props, props.isBackendNew, props.isProjectListLoaded]",[537,558],"[props.initialValues, props.item]"]