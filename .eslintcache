[{"C:\\OpenServer\\domains\\epam-app\\src\\index.tsx":"1","C:\\OpenServer\\domains\\epam-app\\src\\reportWebVitals.ts":"2","C:\\OpenServer\\domains\\epam-app\\src\\App.tsx":"3","C:\\OpenServer\\domains\\epam-app\\src\\Components\\ToDoList.tsx":"4","C:\\OpenServer\\domains\\epam-app\\src\\Components\\NewTaskForm.tsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":248,"mtime":1610300113249,"results":"9","hashOfConfig":"7"},{"size":3079,"mtime":1610311843341,"results":"10","hashOfConfig":"7"},{"size":2083,"mtime":1610309138967,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"y6va45",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\OpenServer\\domains\\epam-app\\src\\index.tsx",[],["24","25"],"C:\\OpenServer\\domains\\epam-app\\src\\reportWebVitals.ts",[],"C:\\OpenServer\\domains\\epam-app\\src\\App.tsx",[],"C:\\OpenServer\\domains\\epam-app\\src\\Components\\ToDoList.tsx",[],"C:\\OpenServer\\domains\\epam-app\\src\\Components\\NewTaskForm.tsx",["26"],"import * as React from 'react'\r\nimport moment from 'moment'\r\nimport { Form, Input, Button, Checkbox, TimePicker } from 'antd'\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n}\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n}\r\n\r\ntype PropsType = {\r\n    selectedDate: moment.Moment\r\n}\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst timeFormat: string = 'HH:mm';\r\n\r\nconst NewTaskForm: React.FC<PropsType> = () => {\r\n    const onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const onTimeChange = (value: moment.Moment | null, dateString: string):void => {\r\n        console.log(value, dateString);\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                label=\"Task name\"\r\n                name=\"taskNime\"\r\n                rules={[{ required: true, message: 'Please input task name!' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Task time\"\r\n                name=\"taskTime\"\r\n                rules={[{ required: true, message: 'Please input time!' }]}\r\n            >\r\n                <TimePicker \r\n                    onChange={onTimeChange} \r\n                    // defaultValue={moment('12:08', timeFormat)} \r\n                    format={timeFormat} \r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Description\"\r\n                name=\"description\"\r\n            >\r\n                <TextArea rows={2} />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Create\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default NewTaskForm",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":3,"column":31,"nodeType":"33","messageId":"34","endLine":3,"endColumn":39},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"@typescript-eslint/no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]