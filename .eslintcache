[{"C:\\OpenServer\\domains\\front1\\src\\index.tsx":"1","C:\\OpenServer\\domains\\front1\\src\\reportWebVitals.ts":"2","C:\\OpenServer\\domains\\front1\\src\\App.tsx":"3","C:\\OpenServer\\domains\\front1\\src\\redux\\store.ts":"4","C:\\OpenServer\\domains\\front1\\src\\redux\\appReducer.ts":"5","C:\\OpenServer\\domains\\front1\\src\\Components\\Header\\HeaderContainer.tsx":"6","C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\ToDoListContainer.tsx":"7","C:\\OpenServer\\domains\\front1\\src\\Components\\Login\\Login.tsx":"8","C:\\OpenServer\\domains\\front1\\src\\Components\\Orders\\OrdersContainer.tsx":"9","C:\\OpenServer\\domains\\front1\\src\\redux\\authReducer.ts":"10","C:\\OpenServer\\domains\\front1\\src\\redux\\taskReducer.ts":"11","C:\\OpenServer\\domains\\front1\\src\\Components\\Header\\Header.tsx":"12","C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\ToDoList.tsx":"13","C:\\OpenServer\\domains\\front1\\src\\Components\\Login\\LoginForm.tsx":"14","C:\\OpenServer\\domains\\front1\\src\\Components\\Orders\\Orders.tsx":"15","C:\\OpenServer\\domains\\front1\\src\\api\\authAPI.ts":"16","C:\\OpenServer\\domains\\front1\\src\\api\\taskApi.ts":"17","C:\\OpenServer\\domains\\front1\\src\\Components\\Header\\MenuMobileContainer.tsx":"18","C:\\OpenServer\\domains\\front1\\src\\utils\\Formik\\ValidateFields.ts":"19","C:\\OpenServer\\domains\\front1\\src\\Components\\TimeScale\\TimeScaleContainer.tsx":"20","C:\\OpenServer\\domains\\front1\\src\\utils\\Formik\\CreateAntField.tsx":"21","C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\Settings\\SettingsModal.tsx":"22","C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeaderContainer.tsx":"23","C:\\OpenServer\\domains\\front1\\src\\api\\api.ts":"24","C:\\OpenServer\\domains\\front1\\src\\api\\userAPI.ts":"25","C:\\OpenServer\\domains\\front1\\src\\Components\\Header\\MenuMobile.tsx":"26","C:\\OpenServer\\domains\\front1\\src\\Components\\TimeScale\\TimeScale.tsx":"27","C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeader.tsx":"28","C:\\OpenServer\\domains\\front1\\src\\utils\\array-helpers.ts":"29","C:\\OpenServer\\domains\\front1\\src\\Components\\TimeScale\\TaskItem\\TaskItemContainer.tsx":"30","C:\\OpenServer\\domains\\front1\\src\\Components\\TimeScale\\TaskItem\\TaskItem.tsx":"31","C:\\OpenServer\\domains\\front1\\src\\Components\\Header\\MenuBrowser.tsx":"32","C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\NewTaskForm\\NewTaskFormContainer.tsx":"33","C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\NewTaskForm\\NewTaskForm.tsx":"34","C:\\OpenServer\\domains\\front1\\src\\redux\\TaskListReducer.ts":"35","C:\\OpenServer\\domains\\front1\\src\\Components\\Login\\LoginContainer.tsx":"36","C:\\OpenServer\\domains\\front1\\src\\Components\\TasksTree\\TasksTreeContainer.tsx":"37","C:\\OpenServer\\domains\\front1\\src\\Components\\Register\\Register.tsx":"38","C:\\OpenServer\\domains\\front1\\src\\api\\taskListAPI.ts":"39","C:\\OpenServer\\domains\\front1\\src\\Components\\TasksTree\\TasksTree.tsx":"40","C:\\OpenServer\\domains\\front1\\src\\Components\\Register\\RegisterForm.tsx":"41","C:\\OpenServer\\domains\\front1\\src\\Components\\TasksTree\\TasksTreeMobile.tsx":"42"},{"size":525,"mtime":1612209745096,"results":"43","hashOfConfig":"44"},{"size":440,"mtime":1611941586994,"results":"45","hashOfConfig":"44"},{"size":4478,"mtime":1612209745022,"results":"46","hashOfConfig":"44"},{"size":873,"mtime":1612209745123,"results":"47","hashOfConfig":"44"},{"size":1600,"mtime":1612209745112,"results":"48","hashOfConfig":"44"},{"size":713,"mtime":1612209745029,"results":"49","hashOfConfig":"44"},{"size":727,"mtime":1611941586913,"results":"50","hashOfConfig":"44"},{"size":1526,"mtime":1612210018976,"results":"51","hashOfConfig":"44"},{"size":709,"mtime":1611941586835,"results":"52","hashOfConfig":"44"},{"size":3133,"mtime":1612209745117,"results":"53","hashOfConfig":"44"},{"size":4730,"mtime":1611941586991,"results":"54","hashOfConfig":"44"},{"size":2236,"mtime":1612209745027,"results":"55","hashOfConfig":"44"},{"size":1806,"mtime":1611941586910,"results":"56","hashOfConfig":"44"},{"size":2980,"mtime":1612210087649,"results":"57","hashOfConfig":"44"},{"size":308,"mtime":1611941586833,"results":"58","hashOfConfig":"44"},{"size":1302,"mtime":1612209745086,"results":"59","hashOfConfig":"44"},{"size":1878,"mtime":1612209745088,"results":"60","hashOfConfig":"44"},{"size":805,"mtime":1612209745036,"results":"61","hashOfConfig":"44"},{"size":1063,"mtime":1612209745136,"results":"62","hashOfConfig":"44"},{"size":961,"mtime":1611941586855,"results":"63","hashOfConfig":"44"},{"size":3736,"mtime":1612209745127,"results":"64","hashOfConfig":"44"},{"size":569,"mtime":1611941586897,"results":"65","hashOfConfig":"44"},{"size":998,"mtime":1611941586906,"results":"66","hashOfConfig":"44"},{"size":495,"mtime":1612209745084,"results":"67","hashOfConfig":"44"},{"size":660,"mtime":1612209745091,"results":"68","hashOfConfig":"44"},{"size":5064,"mtime":1612209745034,"results":"69","hashOfConfig":"44"},{"size":3844,"mtime":1612209745076,"results":"70","hashOfConfig":"44"},{"size":4536,"mtime":1611941586902,"results":"71","hashOfConfig":"44"},{"size":318,"mtime":1611941587001,"results":"72","hashOfConfig":"44"},{"size":832,"mtime":1611941586850,"results":"73","hashOfConfig":"44"},{"size":2923,"mtime":1611941586847,"results":"74","hashOfConfig":"44"},{"size":1824,"mtime":1612209745031,"results":"75","hashOfConfig":"44"},{"size":959,"mtime":1611941586877,"results":"76","hashOfConfig":"44"},{"size":5013,"mtime":1611941586874,"results":"77","hashOfConfig":"44"},{"size":2478,"mtime":1612209745103,"results":"78","hashOfConfig":"44"},{"size":708,"mtime":1612209745041,"results":"79","hashOfConfig":"44"},{"size":711,"mtime":1612209745067,"results":"80","hashOfConfig":"44"},{"size":707,"mtime":1612209745052,"results":"81","hashOfConfig":"44"},{"size":713,"mtime":1612209745089,"results":"82","hashOfConfig":"44"},{"size":1520,"mtime":1612209745062,"results":"83","hashOfConfig":"44"},{"size":2564,"mtime":1612209745054,"results":"84","hashOfConfig":"44"},{"size":192,"mtime":1612209745073,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"183mcre",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"93"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"93"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"93"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\OpenServer\\domains\\front1\\src\\index.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\reportWebVitals.ts",[],"C:\\OpenServer\\domains\\front1\\src\\App.tsx",["179","180","181","182","183","184","185","186"],"import React, { useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport ToDoList from './Components/ToDo/ToDoListContainer'\r\nimport { BrowserRouter, Redirect, Route, Switch, withRouter, useLocation } from 'react-router-dom'\r\nimport { connect, Provider } from 'react-redux'\r\nimport 'antd/dist/antd.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'antd-mobile/dist/antd-mobile.css'\r\nimport store, { AppStateType } from './redux/store'\r\nimport { Layout, Menu, Spin } from 'antd'\r\nimport { compose } from 'redux'\r\nimport { initializeApp, addLocation } from './redux/appReducer'\r\nimport {login} from './redux/authReducer'\r\nimport Header from './Components/Header/HeaderContainer'\r\nimport { isMobile } from \"react-device-detect\"\r\nimport Login from './Components/Login/LoginContainer'\r\nimport Orders from './Components/Orders/OrdersContainer'\r\nimport TasksTree from './Components/TasksTree/TasksTreeContainer'\r\nimport Register from './Components/Register/Register'\r\n\r\nconst { SubMenu } = Menu\r\nconst { Content, Footer, Sider } = Layout\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n  initializeApp: () => void,\r\n  addLocation: (location: string) => void,\r\n  login: (data: any)=> void,\r\n}\r\n\r\nconst App = (props: MapPropsType & DispatchPropsType) => {\r\n  const [location, setLocation] = useState(useLocation().pathname)\r\n\r\n  useEffect(() => {\r\n    if (!props.initialized) {\r\n      // http://localhost:3000/?email=7383125@gmail.com&password=gfhjkm4501\r\n      let instanseCreds = parseQueryString()\r\n      if (instanseCreds.email && instanseCreds.password) {\r\n        instanseCreds.remember = true\r\n        props.login(instanseCreds)\r\n      }\r\n\r\n      if (location === '/front1/') {\r\n        props.addLocation(location)\r\n      }\r\n      //console.log('initialized FALSE', props)\r\n      props.initializeApp()\r\n    } else {\r\n      console.log('initialized TRUE', props)\r\n    }\r\n  }, [props.initialized])\r\n\r\n\r\n  if (!props.initialized) {\r\n    return <Spin key=\"spin\" size=\"large\" />\r\n  }\r\n\r\n  \r\n  // console.log(props.)\r\n\r\n  return (\r\n    <Layout>\r\n      {/* <li>авторизироваться</li> */}\r\n      <Header />\r\n      <Switch>\r\n        {!props.isAuth ?\r\n          <Route exact path={props.appLocation}\r\n            render={() => <Redirect to={props.appLocation+'login'} />} />\r\n        :\r\n          <Route exact path={props.appLocation}\r\n            render={() => <Redirect to={props.appLocation+'toDoList'} />} />\r\n        }\r\n        \r\n        {props.isAuth ?\r\n            <Route exact path={props.appLocation+'login'}\r\n              render={ () => <Redirect to={props.appLocation+'toDoList'} /> } \r\n            />  \r\n          :\r\n            null\r\n        }\r\n\r\n        <Route path={props.appLocation+'login'}\r\n          render={() => <Login />} />\r\n\r\n        {/* {isAuth ? \r\n          <Route path={props.appLocation+'toDoList'} \r\n            render={() => <ToDoList />} />\r\n\r\n          <Route path={props.appLocation+'orders'} \r\n            render={() => <Orders />} />\r\n        :\r\n          null\r\n        } */}\r\n        \r\n         <Route path={props.appLocation+'toDoList'}\r\n            render={() => <ToDoList />} />\r\n\r\n          <Route path={props.appLocation+'tasksTree'}\r\n            render={() => <TasksTree />} />\r\n\r\n          <Route path={props.appLocation+'orders'}\r\n            render={() => <Orders />} />\r\n\r\n          <Route path={props.appLocation+'register'}\r\n            render={() => <Register />} />\r\n\r\n          <Route path={props.appLocation+'*'}\r\n            render={() => <div>404 NOT FOUND</div>} />\r\n      </Switch>\r\n      {/* <Footer>Footer for my app</Footer> */}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n  initialized: state.app.initialized,\r\n  appLocation: state.app.location,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nlet AppContainer = compose<React.ComponentType>(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp, addLocation, login }))(App)\r\n\r\nconst MainApp = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <div className={isMobile ? \"\" : \"container\"}>\r\n          <AppContainer />\r\n        </div>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default MainApp\r\n\r\nconst parseQueryString = (): any => {\r\n  const params:  any = {}\r\n  document.location.search.substr(1).split('&').forEach( (pair) => {\r\n      const [key, value] = pair.split('=')\r\n      params[key] = value\r\n  })\r\n  return params;\r\n};\r\n",["187","188"],"C:\\OpenServer\\domains\\front1\\src\\redux\\store.ts",[],"C:\\OpenServer\\domains\\front1\\src\\redux\\appReducer.ts",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\Header\\HeaderContainer.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\ToDoListContainer.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\Login\\Login.tsx",["189","190","191","192","193"],"C:\\OpenServer\\domains\\front1\\src\\Components\\Orders\\OrdersContainer.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\redux\\authReducer.ts",["194"],"import { authAPI } from \"../api/authAPI\";\r\nimport { BaseThunkType, InferActionsTypes } from \"./store\"\r\n// import {FormAction} from 'redux-form/lib/actions';\r\n\r\ntype InitialStateType = {\r\n    user: UserType | null,\r\n    remember_token: string | null,\r\n    isAuth: boolean\r\n}\r\nlet initialState: InitialStateType = {\r\n    // userId: null as (number | null),\r\n    // email: null as string | null,\r\n    // login: null as string | null,\r\n    // isAuth: false,\r\n    // captchaUrl: null as string | null// if null, then captcha is not required\r\n    user: null,\r\n    remember_token: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/AUTH/SET_USER_DATA':\r\n            if (action.user !== null) {\r\n                console.log('1')\r\n                return { ...state, user: action.user, remember_token: action.remember_token, isAuth: true}\r\n            } else {\r\n                return initialState;\r\n            }\r\n            \r\n        case 'SN/AUTH/LOGOUT':\r\n            localStorage.removeItem('remember_token');\r\n            return initialState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type UserType = {\r\n    created_at: string\r\n    email: string\r\n    email_verified_at: null | any\r\n    id: number\r\n    name: string\r\n    status: string\r\n    updated_at: string\r\n}\r\nexport const actions = {\r\n    setAuthUserData: (user: UserType | null, remember_token: string | null) => ({ type: 'SN/AUTH/SET_USER_DATA', user, remember_token } as const),\r\n    logout: () => ({type: 'SN/AUTH/LOGOUT'} as const),\r\n}\r\n\r\n// export const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n//     let response = await authAPI.me()\r\n//     //console.log('getAuthUserData', response)\r\n// }\r\n\r\nexport const getAuthUserData = (): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        let response = await authAPI.me()\r\n\r\n        if (response !== null) {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(actions.setAuthUserData(response.data.user, response.data.remember_token))\r\n            } else {\r\n                //console.log(response.data.messages[0])\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport type credsType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n}\r\n\r\nexport const login = (data: credsType): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        let response = await authAPI.login(data)\r\n        if (response) {\r\n            console.log(response)\r\n            if (response.status === 200) {\r\n                console.log('200')\r\n                dispatch(actions.setAuthUserData(response.data.user, response.data.remember_token))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// export const logout = (): ThunkType => {\r\n//     return async (dispatch, getState) => {\r\n//         let response = await authAPI.logout()\r\n//     }\r\n// }\r\n\r\nexport default authReducer;\r\n\r\n// export type InitialStateType = typeof initialState;\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType< ActionsTypes>\r\n\r\n","C:\\OpenServer\\domains\\front1\\src\\redux\\taskReducer.ts",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\Header\\Header.tsx",["195","196","197","198"],"import React from 'react'\r\nimport {\r\n    BrowserView,\r\n    MobileView,\r\n    isBrowser,\r\n    isMobile\r\n} from \"react-device-detect\"\r\nimport { HeaderPropsType } from './HeaderContainer'\r\nimport MenuBrowser from './MenuBrowser'\r\nimport MenuMobile from './MenuMobileContainer'\r\n// import {useHistory, useLocation} from 'react-router-dom'\r\n\r\n// type MenuDataType = Array<any>\r\n\r\nexport type OwnHeaderPropsType = {}\r\n\r\nconst Header: React.FC<HeaderPropsType> = (props) => {\r\n    // const location = useLocation()\r\n    // console.log(parseQueryString())\r\n\r\n    if (isMobile) {\r\n        return <MenuMobile menuData={menuData(props.appLocation)} logout={props.logout}/>\r\n    } else {\r\n        return <MenuBrowser menuData={menuData(props.appLocation)} appLocation={props.appLocation}/>\r\n    }\r\n}\r\n\r\nexport default Header\r\n\r\n\r\nexport type MenuDataType = ReturnType<typeof menuData>\r\n\r\nconst menuData = (appLocation: string) => {\r\n    const data = [\r\n    {\r\n        value: 'planning',\r\n        label: 'Planning',\r\n        children: [\r\n            {\r\n                label: 'ToDo list',\r\n                // label: <Link to='/toDoList'>ToDo list</Link>,\r\n                value: appLocation + 'toDoList',\r\n                disabled: false,\r\n            },\r\n            {\r\n                label: 'Tasks tree',\r\n                value: appLocation + 'tasksTree',\r\n            },\r\n            {\r\n                label: 'Analysis',\r\n                value: appLocation + 'analysis',\r\n                disabled: true,\r\n            }\r\n        ],\r\n    }, {\r\n        value: 'catalog',\r\n        label: 'Catalog',\r\n        children: [\r\n            {\r\n                label: 'Products',\r\n                value: appLocation + 'products',\r\n            }\r\n            , {\r\n                label: 'Providers',\r\n                value: appLocation + 'providers',\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'Orders',\r\n        // isLeaf: true,\r\n        children: [\r\n            {\r\n                label: 'Orders',\r\n                value: appLocation + 'orders',\r\n            },\r\n            {\r\n                label: 'Leads',\r\n                value: appLocation + 'leads',\r\n            },\r\n        ],\r\n    },\r\n    ]\r\n    return data\r\n}\r\n","C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\ToDoList.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\Login\\LoginForm.tsx",["199","200","201","202","203","204","205","206","207"],"C:\\OpenServer\\domains\\front1\\src\\Components\\Orders\\Orders.tsx",["208"],"C:\\OpenServer\\domains\\front1\\src\\api\\authAPI.ts",[],"C:\\OpenServer\\domains\\front1\\src\\api\\taskApi.ts",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\Header\\MenuMobileContainer.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\utils\\Formik\\ValidateFields.ts",["209","210"],"import { userAPI } from \"../../api/userAPI\";\r\n\r\nexport const validateRequired = (value: string) => {\r\n    let errors;\r\n    if (!value) {\r\n        errors = \"Required!\";\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport const validateEmail = (value: string) => {\r\n    let errors;\r\n\r\n    if (!value) {\r\n        errors = \"Required!\";\r\n    } else if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\r\n        errors = \"Invalid email address!\";\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport const validateAsync = (value: string) => {\r\n    const sleep = () => new Promise(resolve => setTimeout(resolve, 2000));\r\n    return sleep().then(() => {\r\n        if (['admin', 'null', 'god'].includes(value)) {\r\n            return 'Nice try'\r\n        }\r\n    })\r\n}\r\n\r\nexport const validateUserExistense = (value: string) => {\r\n    //console.log(value)\r\n    return userAPI.checkUserForExistence(value).then( (result) => {\r\n        //console.log(result.status)\r\n        if (result.status !== 404) {\r\n            return 'Name is bisy'\r\n        } \r\n    })\r\n    //console.log(test)\r\n\r\n}","C:\\OpenServer\\domains\\front1\\src\\Components\\TimeScale\\TimeScaleContainer.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\utils\\Formik\\CreateAntField.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\Settings\\SettingsModal.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeaderContainer.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\api\\api.ts",[],"C:\\OpenServer\\domains\\front1\\src\\api\\userAPI.ts",["211","212"],"import { NewTaskDataType, TaskType } from '../Types/types'\r\nimport {instance} from './api'\r\n\r\nexport const userAPI = {\r\n    checkUserForExistence(userName: string) {\r\n        return instance.get<any>(`users?userName=${userName}`)\r\n        .then(response => {\r\n            return response.status === 200 ? response : null\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                return err.response\r\n            } else if (err.request) {\r\n                //console.log('request', err.request)\r\n            } else {\r\n                //console.log('anything else: ', err)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n}","C:\\OpenServer\\domains\\front1\\src\\Components\\Header\\MenuMobile.tsx",["213","214"],"import React, { useState } from 'react'\r\nimport { Menu, ActivityIndicator, NavBar, Button } from 'antd-mobile'\r\nimport { ValueType } from 'antd-mobile/lib/menu/PropsType'\r\nimport './MenuMobile.css'\r\nimport {useHistory, useLocation} from 'react-router-dom'\r\nimport {MenuDataType} from './Header'\r\nimport { MenuMobilePropsType } from './MenuMobileContainer'\r\nimport { Link } from 'react-router-dom'\r\nimport {LogoutOutlined} from '@ant-design/icons'\r\n\r\nexport type OwnMenuMobilePropsType = {\r\n    menuData: MenuDataType,\r\n    logout: ()=>void\r\n}\r\n\r\nconst MenuMobile: React.FC<MenuMobilePropsType> = (props) => {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [show, setShow] = useState(false)\r\n    type DataType = typeof props.menuData\r\n    const data = [...props.menuData] \r\n    const [initData, setInitData] = useState<DataType>(data)\r\n\r\n    const getSelectedMenuItem = ():ValueType => {\r\n        let response: ValueType = [data[0].value, '']\r\n        data.forEach( (dataItem: any) => {\r\n            if (dataItem.children) {\r\n                dataItem.children.forEach( (item: any) => {\r\n                    //console.log('/',item.value,'===',location.pathname)\r\n                    if (item.value === location.pathname) {\r\n                        response = [dataItem.value, item.value]\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        //console.log('getSelectedMenuItem response: ', response)\r\n        return response\r\n    }\r\n\r\n    const [selectedMenuItem, setSelectedMenuItem] = useState<ValueType>( getSelectedMenuItem() )\r\n\r\n    const handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        e.preventDefault(); // Fix event propagation on Android\r\n        setShow(!show)\r\n        // if (!initData) {\r\n        //     setInitData(data)\r\n        // }\r\n    }\r\n\r\n    const onChange = (value?: ValueType | undefined) => {        \r\n        let label = '';\r\n        data.forEach((dataItem) => {\r\n            if (value) {\r\n                if (dataItem.value === value[0]) {\r\n                    // Нужно ли сохранять совпадение submenu?????\r\n                    if (dataItem.children && value[1]) {\r\n                        dataItem.children.forEach((cItem: { value: string | string[]; label: any }) => {\r\n                            if (cItem.value === value[1]) {\r\n                                label = `/${cItem.value}`;\r\n                                // console.log('history.push:',`${cItem.value}`)\r\n                                // history.push(`/${cItem.value}`)\r\n                                // history.push(props.appLocation + cItem.value)\r\n                                history.replace(`${cItem.value}`)\r\n                                \r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                setSelectedMenuItem([selectedMenuItem[0], value[1]])\r\n            }\r\n        })\r\n    }\r\n\r\n    const onMaskClick = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    const menuEl = (\r\n        <Menu\r\n            className=\"foo-menu\"\r\n            data={initData}\r\n            value={selectedMenuItem}\r\n            onChange={onChange}\r\n            height={document.documentElement.clientHeight * 0.6}\r\n        />\r\n    );\r\n\r\n    const loadingEl = (\r\n        <div style={{ width: '100%', height: document.documentElement.clientHeight * 0.6, display: 'flex', justifyContent: 'center' }}>\r\n            <ActivityIndicator size=\"large\" />\r\n        </div>\r\n    );\r\n\r\n    // console.log(props)\r\n\r\n    const onLogout = () => {\r\n        onChange(['', ''])\r\n        history.replace(props.appLocation+'login')\r\n        props.logout()\r\n    }\r\n\r\n    return (\r\n        <div className={show ? 'menu-active' : ''}>\r\n            <div>\r\n                <NavBar\r\n                    leftContent=\"\"\r\n                    mode=\"light\"\r\n                    icon={<img src=\"https://gw.alipayobjects.com/zos/rmsportal/iXVHARNNlmdCGnwWxQPH.svg\" className=\"am-icon am-icon-md\" alt=\"\" />}\r\n                    onLeftClick={handleClick}\r\n                    className=\"top-nav-bar\"\r\n                >\r\n                    {!props.isAuth ? \r\n                        <Link \r\n                            to={props.appLocation+\"login\"} \r\n                            onClick={ ()=>{onChange(['', ''])} }\r\n                        >\r\n                            <span className=\"text-white\">Login</span> \r\n                        </Link>\r\n                    :\r\n                        <div>\r\n                            {props.user?.name}\r\n                            <Button className=\"ml-5\" size=\"small\" icon={<LogoutOutlined/>} onClick={onLogout} inline >\r\n\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                    \r\n                </NavBar>\r\n            </div>\r\n            {show ? initData ? menuEl : loadingEl : null}\r\n            {show ? <div className=\"menu-mask\" onClick={onMaskClick} /> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (MenuMobile)\r\n\r\n\r\n","C:\\OpenServer\\domains\\front1\\src\\Components\\TimeScale\\TimeScale.tsx",["215"],"import React, { useEffect, useState } from 'react'\r\nimport { TaskType } from '../../Types/types'\r\nimport moment from 'moment'\r\nimport { TimeScalePropsType } from './TimeScaleContainer'\r\nimport { Divider, Spin, Tooltip, message } from 'antd'\r\nimport TaskItem from './TaskItem/TaskItemContainer'\r\nimport { sortTaskArrayByParams } from '../../utils/array-helpers'\r\n\r\nexport type OwnTaskTimeScaleType = {}\r\nconst TimeScale: React.FC<TimeScalePropsType> = (props) => {\r\n    type SelestedDatesType = typeof props.dateInterval\r\n    const [selestedDates, setSelectedDates] = useState<SelestedDatesType>({ startDate: moment(null), endDate: moment() })\r\n    useEffect(() => {\r\n        if (\r\n            props.dateInterval.startDate.isSame(selestedDates.startDate.format('YYYY-MM-DD'), \"day\" ) &&\r\n            props.dateInterval.endDate.isSame(selestedDates.endDate.format('YYYY-MM-DD'), \"day\" )\r\n        ) { }\r\n        else {\r\n            if (props.dateInterval.startDate !== null) {\r\n                props.getTaskList(\r\n                    props.dateInterval.startDate.format('YYYY-MM-DD'),\r\n                    props.dateInterval.endDate.format('YYYY-MM-DD')\r\n                )\r\n                setSelectedDates(props.dateInterval)\r\n            }\r\n        }\r\n    }, [props.dateInterval])\r\n\r\n    useEffect(() => {\r\n        if (props.errorMessage !== null) {\r\n            message.success(props.errorMessage)\r\n        }\r\n    }, [props.errorMessage])\r\n\r\n    if (props.taskList !== null) {\r\n        return (\r\n            <>\r\n                {getTimeScaleArrey(props.taskList)}\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <Spin key=\"spin\" size=\"large\" />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimeScale\r\n\r\n\r\nconst getTimeScaleArrey = (taskList: Array<TaskType>): Array<React.ReactElement<string>> => {\r\n    let timeScaleArrey: Array<React.ReactElement<string>> = []\r\n    let tomorowTasks: Array<TaskType> = []\r\n\r\n    taskList.sort(sortTaskArrayByParams('time')).sort(sortTaskArrayByParams('date'))\r\n\r\n    const getHeadlineLabel = (task: TaskType) => {\r\n        return moment(task.date).format('DD MMMM')\r\n    }\r\n\r\n    let headlineDate: string | null = null\r\n\r\n    if (taskList !== null && taskList.length > 0) {\r\n        headlineDate = getHeadlineLabel(taskList[0])\r\n        timeScaleArrey.push(\r\n            <h3 key={headlineDate + 'title'}>{headlineDate}:</h3>\r\n        )\r\n    }\r\n\r\n    for (let index: number = 0; index < 24; index++) {\r\n        if (taskList.length > 0) {\r\n            timeScaleArrey.push(\r\n                <Divider key={index + 'to' + headlineDate} orientation=\"left\">\r\n                    {index <= 9 ? '0' : null}{index}:00\r\n                </Divider>\r\n            )\r\n        } else {\r\n            timeScaleArrey.push(<h3 key=\"noTasks\">no tasks</h3>)\r\n            break\r\n        }\r\n\r\n        if (taskList !== null) {\r\n            for (let i = 0; i < taskList.length; i++) {\r\n                const element: TaskType = taskList[i]\r\n                const timeVal = Number(element.time.split(':', 1))\r\n                const nextHour = index + 1\r\n                if (timeVal >= index && timeVal < nextHour) {\r\n                    if (getHeadlineLabel(element) === headlineDate) {\r\n                        timeScaleArrey.push(\r\n                            <Tooltip key={index + '-' + element.id} placement=\"topLeft\" title={element.descriptions}>\r\n                                <TaskItem element={element} />\r\n                            </Tooltip>\r\n                        )\r\n                    }\r\n                    else {\r\n                        tomorowTasks.push(element)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (tomorowTasks.length > 0) {\r\n        timeScaleArrey = timeScaleArrey.concat(getTimeScaleArrey(tomorowTasks))\r\n    }\r\n\r\n    return timeScaleArrey\r\n}","C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\ToDoHeader\\ToDoHeader.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\utils\\array-helpers.ts",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\TimeScale\\TaskItem\\TaskItemContainer.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\TimeScale\\TaskItem\\TaskItem.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\Header\\MenuBrowser.tsx",["216","217","218","219","220"],"import React, {useState} from 'react'\r\nimport { Menu } from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst MenuBrowser: React.FC<any> = (props) => {\r\n    const [state, setState] = useState<Array<string>>([])\r\n    const handleClick = (e: any | undefined) => {\r\n        // //console.log('click ', e);\r\n        // setState({ current: e.key });\r\n    }\r\n\r\n    const getMenuItem = (childs: any):any => {\r\n        // return <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n        const menuItems = childs.map( (item: any) => {\r\n            return (\r\n                <Menu.Item key={item.value}>\r\n                    <Link to={item.value}>{item.label}</Link>\r\n                </Menu.Item>\r\n            )\r\n        })\r\n        return menuItems\r\n    }\r\n\r\n    const getSubMenu = () => {\r\n        // //console.log(props.menuData)\r\n        const subMenu = props.menuData.map( (item: any) => {\r\n            // //console.log(item)\r\n            return (\r\n                <SubMenu \r\n                    key={item.value} \r\n                    // icon={<MailOutlined />}\r\n                    title={item.label}\r\n                >\r\n                    {getMenuItem(item.children)}\r\n                </SubMenu >\r\n            )\r\n        })\r\n        subMenu.push(\r\n            <Menu.Item key=\"login\">\r\n                <Link to={props.appLocation +\"login\"} >Login</Link>\r\n            </Menu.Item>\r\n        )\r\n        return subMenu\r\n    }\r\n\r\n    console.log(props)\r\n    return (\r\n        <Menu \r\n            onClick={handleClick} \r\n            // selectedKeys={[current]} \r\n            mode=\"horizontal\"\r\n            theme=\"dark\"\r\n        >\r\n            {getSubMenu()}\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default MenuBrowser","C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\NewTaskForm\\NewTaskFormContainer.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\ToDo\\NewTaskForm\\NewTaskForm.tsx",["221"],"C:\\OpenServer\\domains\\front1\\src\\redux\\TaskListReducer.ts",["222"],"C:\\OpenServer\\domains\\front1\\src\\Components\\Login\\LoginContainer.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\TasksTree\\TasksTreeContainer.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\Components\\Register\\Register.tsx",[],"C:\\OpenServer\\domains\\front1\\src\\api\\taskListAPI.ts",["223","224"],"C:\\OpenServer\\domains\\front1\\src\\Components\\TasksTree\\TasksTree.tsx",["225","226","227","228","229","230","231"],"C:\\OpenServer\\domains\\front1\\src\\Components\\Register\\RegisterForm.tsx",["232","233"],"C:\\OpenServer\\domains\\front1\\src\\Components\\TasksTree\\TasksTreeMobile.tsx",[],{"ruleId":"234","severity":1,"message":"235","line":4,"column":25,"nodeType":"236","messageId":"237","endLine":4,"endColumn":29},{"ruleId":"234","severity":1,"message":"238","line":10,"column":10,"nodeType":"236","messageId":"237","endLine":10,"endColumn":20},{"ruleId":"234","severity":1,"message":"239","line":18,"column":9,"nodeType":"236","messageId":"237","endLine":18,"endColumn":16},{"ruleId":"234","severity":1,"message":"240","line":19,"column":9,"nodeType":"236","messageId":"237","endLine":19,"endColumn":16},{"ruleId":"234","severity":1,"message":"241","line":19,"column":18,"nodeType":"236","messageId":"237","endLine":19,"endColumn":24},{"ruleId":"234","severity":1,"message":"242","line":19,"column":26,"nodeType":"236","messageId":"237","endLine":19,"endColumn":31},{"ruleId":"234","severity":1,"message":"243","line":28,"column":20,"nodeType":"236","messageId":"237","endLine":28,"endColumn":31},{"ruleId":"244","severity":1,"message":"245","line":40,"column":6,"nodeType":"246","endLine":40,"endColumn":25,"suggestions":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"234","severity":1,"message":"252","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":14},{"ruleId":"234","severity":1,"message":"253","line":3,"column":16,"nodeType":"236","messageId":"237","endLine":3,"endColumn":25},{"ruleId":"234","severity":1,"message":"254","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"255","line":7,"column":10,"nodeType":"236","messageId":"237","endLine":7,"endColumn":19},{"ruleId":"234","severity":1,"message":"256","line":11,"column":7,"nodeType":"236","messageId":"237","endLine":11,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":22,"column":9,"nodeType":"259","messageId":"260","endLine":23,"endColumn":26},{"ruleId":"234","severity":1,"message":"261","line":3,"column":5,"nodeType":"236","messageId":"237","endLine":3,"endColumn":16},{"ruleId":"234","severity":1,"message":"262","line":4,"column":5,"nodeType":"236","messageId":"237","endLine":4,"endColumn":15},{"ruleId":"234","severity":1,"message":"263","line":5,"column":5,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":8,"column":10,"nodeType":"236","messageId":"237","endLine":8,"endColumn":14},{"ruleId":"234","severity":1,"message":"264","line":4,"column":9,"nodeType":"236","messageId":"237","endLine":4,"endColumn":19},{"ruleId":"234","severity":1,"message":"252","line":5,"column":10,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"265","line":6,"column":10,"nodeType":"236","messageId":"237","endLine":6,"endColumn":23},{"ruleId":"234","severity":1,"message":"266","line":6,"column":58,"nodeType":"236","messageId":"237","endLine":6,"endColumn":79},{"ruleId":"234","severity":1,"message":"267","line":7,"column":10,"nodeType":"236","messageId":"237","endLine":7,"endColumn":16},{"ruleId":"234","severity":1,"message":"235","line":8,"column":10,"nodeType":"236","messageId":"237","endLine":8,"endColumn":14},{"ruleId":"234","severity":1,"message":"256","line":10,"column":7,"nodeType":"236","messageId":"237","endLine":10,"endColumn":19},{"ruleId":"234","severity":1,"message":"268","line":12,"column":7,"nodeType":"236","messageId":"237","endLine":12,"endColumn":13},{"ruleId":"234","severity":1,"message":"269","line":26,"column":11,"nodeType":"236","messageId":"237","endLine":26,"endColumn":19},{"ruleId":"234","severity":1,"message":"270","line":1,"column":10,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"254","line":1,"column":8,"nodeType":"236","messageId":"237","endLine":1,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":33,"column":5,"nodeType":"273","messageId":"274","endLine":33,"endColumn":22},{"ruleId":"234","severity":1,"message":"275","line":1,"column":10,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"276","line":1,"column":27,"nodeType":"236","messageId":"237","endLine":1,"endColumn":35},{"ruleId":"234","severity":1,"message":"277","line":19,"column":22,"nodeType":"236","messageId":"237","endLine":19,"endColumn":33},{"ruleId":"234","severity":1,"message":"278","line":57,"column":33,"nodeType":"236","messageId":"237","endLine":57,"endColumn":38},{"ruleId":"244","severity":1,"message":"279","line":27,"column":8,"nodeType":"246","endLine":27,"endColumn":28,"suggestions":"280"},{"ruleId":"234","severity":1,"message":"281","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":22},{"ruleId":"234","severity":1,"message":"282","line":4,"column":24,"nodeType":"236","messageId":"237","endLine":4,"endColumn":40},{"ruleId":"234","severity":1,"message":"283","line":4,"column":42,"nodeType":"236","messageId":"237","endLine":4,"endColumn":57},{"ruleId":"234","severity":1,"message":"284","line":9,"column":12,"nodeType":"236","messageId":"237","endLine":9,"endColumn":17},{"ruleId":"234","severity":1,"message":"285","line":9,"column":19,"nodeType":"236","messageId":"237","endLine":9,"endColumn":27},{"ruleId":"244","severity":1,"message":"286","line":49,"column":8,"nodeType":"246","endLine":49,"endColumn":30,"suggestions":"287"},{"ruleId":"271","severity":1,"message":"272","line":34,"column":13,"nodeType":"288","messageId":"274","endLine":34,"endColumn":30},{"ruleId":"234","severity":1,"message":"275","line":1,"column":10,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"276","line":1,"column":27,"nodeType":"236","messageId":"237","endLine":1,"endColumn":35},{"ruleId":"234","severity":1,"message":"289","line":1,"column":28,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"234","severity":1,"message":"290","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":20},{"ruleId":"234","severity":1,"message":"291","line":4,"column":22,"nodeType":"236","messageId":"237","endLine":4,"endColumn":30},{"ruleId":"234","severity":1,"message":"267","line":4,"column":32,"nodeType":"236","messageId":"237","endLine":4,"endColumn":38},{"ruleId":"234","severity":1,"message":"292","line":5,"column":10,"nodeType":"236","messageId":"237","endLine":5,"endColumn":25},{"ruleId":"234","severity":1,"message":"283","line":5,"column":27,"nodeType":"236","messageId":"237","endLine":5,"endColumn":42},{"ruleId":"244","severity":1,"message":"293","line":15,"column":8,"nodeType":"246","endLine":15,"endColumn":24,"suggestions":"294"},{"ruleId":"234","severity":1,"message":"235","line":5,"column":10,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"267","line":6,"column":10,"nodeType":"236","messageId":"237","endLine":6,"endColumn":16},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'SubMenu' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'setLocation' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location' and 'props'. Either include them or remove the dependency array.","ArrayExpression",["295"],"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"'List' is defined but never used.","'InputItem' is defined but never used.","'moment' is defined but never used.","'propTypes' is defined but never used.","'CheckboxItem' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'BrowserView' is defined but never used.","'MobileView' is defined but never used.","'isBrowser' is defined but never used.","'useHistory' is defined but never used.","'validateAsync' is defined but never used.","'validateUserExistense' is defined but never used.","'Button' is defined but never used.","'layout' is assigned a value but never used.","'location' is assigned a value but never used.","'formatCountdown' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'NewTaskDataType' is defined but never used.","'TaskType' is defined but never used.","'setInitData' is assigned a value but never used.","'label' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props', 'selestedDates.endDate', and 'selestedDates.startDate'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["298"],"'MailOutlined' is defined but never used.","'AppstoreOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onReset' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["299"],"ReturnStatement","'useState' is defined but never used.","'DatePicker' is defined but never used.","'Checkbox' is defined but never used.","'FileAddOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["300"],{"desc":"301","fix":"302"},"no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},"Update the dependencies array to be: [location, props, props.initialized]",{"range":"309","text":"310"},"Update the dependencies array to be: [props, props.dateInterval, selestedDates.endDate, selestedDates.startDate]",{"range":"311","text":"312"},"Update the dependencies array to be: [onReset, props, props.taskSaveStatus]",{"range":"313","text":"314"},"Update the dependencies array to be: [props, props.taskList]",{"range":"315","text":"316"},[1510,1529],"[location, props, props.initialized]",[1258,1278],"[props, props.dateInterval, selestedDates.endDate, selestedDates.startDate]",[1499,1521],"[onReset, props, props.taskSaveStatus]",[555,571],"[props, props.taskList]"]